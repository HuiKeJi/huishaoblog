<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>appimage创建desktop问题解决</title>
    <link href="/2025/08/31/appimage%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    <url>/2025/08/31/appimage%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="这个问题通常是由于-desktop-文件的-StartupWMClass-不匹配导致的。可以按照以下步骤解决："><a href="#这个问题通常是由于-desktop-文件的-StartupWMClass-不匹配导致的。可以按照以下步骤解决：" class="headerlink" title="这个问题通常是由于 .desktop 文件的 StartupWMClass 不匹配导致的。可以按照以下步骤解决："></a>这个问题通常是由于 .desktop 文件的 StartupWMClass 不匹配导致的。可以按照以下步骤解决：</h1><h2 id="1-确定软件的-WM-CLASS-值"><a href="#1-确定软件的-WM-CLASS-值" class="headerlink" title="1. 确定软件的 WM_CLASS 值"></a>1. 确定软件的 WM_CLASS 值</h2><p>AppImage 在运行时可能使用了不同的窗口类名称（WM_CLASS），而 .desktop 文件中的 StartupWMClass 需要与其匹配，否则系统会认为它们是两个不同的应用。</p><h3 id="方法-1：使用-xprop-获取-WM-CLASS"><a href="#方法-1：使用-xprop-获取-WM-CLASS" class="headerlink" title="方法 1：使用 xprop 获取 WM_CLASS"></a>方法 1：使用 xprop 获取 WM_CLASS</h3><ol><li>打开终端</li><li>运行以下命令：<br><code>xprop | grep WM_CLASS</code></li><li>鼠标点击 AppImage 运行的窗口，终端会返回类似以下的输出：<br><code>WM_CLASS(STRING) = &quot;real_app_name&quot;, &quot;RealAppClass&quot;</code><br>其中，”RealAppClass” 是你需要的值。</li></ol><h3 id="方法-2：使用-wmctrl（如果-xprop-无效）"><a href="#方法-2：使用-wmctrl（如果-xprop-无效）" class="headerlink" title="方法 2：使用 wmctrl（如果 xprop 无效）"></a>方法 2：使用 wmctrl（如果 xprop 无效）</h3><p>如果 xprop 无法获取正确的 WM_CLASS，可以尝试：</p><p><code>wmctrl -lx</code></p><p>然后找到你的 AppImage 运行窗口的对应行，类似：</p><p><code>0x04200007  0 real_app_name.RealAppClass  AppImage 软件标题</code></p><p>这里 real_app_name.RealAppClass 的最后一部分就是 StartupWMClass 需要的值。</p><h2 id="2-修改-desktop-文件"><a href="#2-修改-desktop-文件" class="headerlink" title="2. 修改 .desktop 文件"></a>2. 修改 .desktop 文件</h2><ol><li>编辑你的 .desktop 文件（通常在 ~&#x2F;usr&#x2F;share&#x2F;applications&#x2F; 目录下）：<br><code>sudo vim /usr/share/applications/your_app.desktop</code></li><li>添加或修改 StartupWMClass，确保它匹配刚刚获取的值：<br><code>[Desktop Entry]</code><br><code>Version=1.0</code><br><code>Type=Application</code><br><code>Name=Your App</code><br><code>Exec=/path/to/your.appimage</code><br><code>Icon=/path/to/icon.png</code><br><code>StartupWMClass=RealAppClass  # 这里填写正确的 WM_CLASS 值</code></li></ol><p>这样，AppImage 运行时就不会再出现两个图标，而是正确地重叠到已固定的图标上。</p><p>要让通过 AppImage 启动的 .desktop 文件出现在 开始菜单（Start Menu）并分类别，你可以按照以下步骤来操作（适用于基于 freedesktop.org 的桌面环境，比如 GNOME、KDE、XFCE、LXQt 等）：</p><hr><p>✅ 一、放置 .desktop 文件到系统或用户目录</p><p>你可以将 .desktop 文件放到以下路径之一：</p><p>系统范围（所有用户）：</p><p>&#x2F;usr&#x2F;share&#x2F;applications&#x2F;</p><p>当前用户（推荐）：</p><p>~&#x2F;.local&#x2F;share&#x2F;applications&#x2F;</p><p>如果你是用 AppImage 启动器（比如 AppImageLauncher）生成的，它一般会自动放到 ~&#x2F;.local&#x2F;share&#x2F;applications&#x2F;。</p><hr><p>✅ 二、编辑 .desktop 文件，设置分类</p><p>.desktop 文件本质是一个文本文件，你可以用任意编辑器打开，例如：</p><p>nano ~&#x2F;.local&#x2F;share&#x2F;applications&#x2F;yourapp.desktop</p><p>关键字段是：</p><p>Categories&#x3D;Utility;</p><p>将 Categories&#x3D; 改成你想要归类到的分类。常用分类有：</p><p>分类名对应开始菜单位置</p><p>Utility实用工具<br>AudioVideo多媒体<br>Development开发工具<br>Education教育类<br>Game游戏<br>Graphics图形绘制、图像处理等<br>Network网络工具<br>Office办公软件<br>Settings设置（系统配置）<br>System系统工具</p><p>例如一个图像查看工具可以这样写：</p><p>[Desktop Entry]<br>Type&#x3D;Application<br>Name&#x3D;MyApp<br>Exec&#x3D;&#x2F;home&#x2F;user&#x2F;Applications&#x2F;MyApp.AppImage<br>Icon&#x3D;myapp<br>Categories&#x3D;Graphics;</p><blockquote><p>注意 Categories&#x3D; 必须以分号 ; 结尾。</p></blockquote><hr><p>✅ 三、刷新桌面数据库（部分桌面环境需要）</p><p>执行以下命令刷新图标&#x2F;菜单缓存：</p><p>update-desktop-database ~&#x2F;.local&#x2F;share&#x2F;applications&#x2F;</p><hr><p>✅ 四、图标显示问题（可选）</p><p>Icon&#x3D;myapp 应该是图标名（不带扩展名），系统会在 &#x2F;usr&#x2F;share&#x2F;icons 或 ~&#x2F;.icons 中查找对应的 PNG 或 SVG 文件。</p><p>或者你可以用绝对路径：</p><p>Icon&#x3D;&#x2F;home&#x2F;user&#x2F;.icons&#x2F;myapp.png</p><hr><p>✅ 五、重新登录或重启桌面环境</p><p>有时你需要注销再登录，或重启系统，才能在开始菜单看到效果（特别是 KDE Plasma）。</p><hr><p>🧩 补充工具推荐</p><p>如果你觉得手动编辑繁琐，可以用这些图形化工具：</p><p>AppImageLauncher – 自动管理 AppImage、创建 .desktop 文件。</p><p>Menulibre – 图形化菜单编辑器，适合 XFCE、GNOME 等。</p><p>安装：</p><p>sudo pacman -S menulibre</p><hr><p>如你提供 .desktop 文件内容或你使用的桌面环境（KDE&#x2F;GNOME&#x2F;XFCE…），我可以更具体地帮你分类。</p>]]></content>
    
    
    <categories>
      
      <category>Arch Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Conky桌面卡片</title>
    <link href="/2025/08/30/Conky%E6%A1%8C%E9%9D%A2%E5%8D%A1%E7%89%87/"/>
    <url>/2025/08/30/Conky%E6%A1%8C%E9%9D%A2%E5%8D%A1%E7%89%87/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="conky使用"><a href="#conky使用" class="headerlink" title="conky使用"></a>conky使用</h1><h4 id="安装conky"><a href="#安装conky" class="headerlink" title="安装conky"></a>安装conky</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S conky<br></code></pre></td></tr></table></figure><h4 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S mesa-utils brightnessctl <br></code></pre></td></tr></table></figure><h4 id="编辑用户目录下配置文件"><a href="#编辑用户目录下配置文件" class="headerlink" title="编辑用户目录下配置文件"></a>编辑用户目录下配置文件</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vim</span> ~/.config/conky/comprehensive.<span class="hljs-keyword">conf</span><br></code></pre></td></tr></table></figure><blockquote><p>[!IMPORTANT]</p><p>加入</p></blockquote><figure class="highlight smalltalk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs smalltalk">conky.config = &#123;<br>    background = <span class="hljs-keyword">true</span>,<br>    update_interval = <span class="hljs-number">1</span>,<br>    total_run_times = <span class="hljs-number">0</span>,<br>    own_window = <span class="hljs-keyword">true</span>,<br>    own_window_type = <span class="hljs-string">&#x27;desktop&#x27;</span>,<br>    own_window_transparent = <span class="hljs-keyword">true</span>,<br>    own_window_argb_visual = <span class="hljs-keyword">true</span>,<br>    own_window_argb_value = <span class="hljs-number">0</span>,<br>    double_buffer = <span class="hljs-keyword">true</span>,<br>    draw_shades = <span class="hljs-keyword">false</span>,<br>    draw_outline = <span class="hljs-keyword">false</span>,<br>    draw_borders = <span class="hljs-keyword">false</span>,<br>    alignment = <span class="hljs-string">&#x27;top_right&#x27;</span>,<br>    gap_x = <span class="hljs-number">30</span>,<br>    gap_y = <span class="hljs-number">60</span>,<br>    minimum_width = <span class="hljs-number">250</span>,<br>    minimum_height = <span class="hljs-number">400</span>,<br>    default_color = <span class="hljs-string">&#x27;white&#x27;</span>,<br>    use_xft = <span class="hljs-keyword">true</span>,<br>    font = <span class="hljs-string">&#x27;Ubuntu Mono:size=12&#x27;</span>,<br>&#125;;<br><br>conky.text = [[<br><span class="hljs-string">$&#123;</span>color cyan&#125;日期时间：<span class="hljs-string">$&#123;</span>time %<span class="hljs-type">Y</span>-%m-%d %<span class="hljs-type">H</span>:%<span class="hljs-type">M</span>:%<span class="hljs-type">S</span>&#125;<br><span class="hljs-string">$&#123;</span>color cyan&#125;主机名称：<span class="hljs-string">$&#123;</span>nodename&#125;<br><span class="hljs-string">$&#123;</span>color cyan&#125;系统信息：<span class="hljs-string">$&#123;</span>sysname&#125; <span class="hljs-string">$&#123;</span>kernel&#125; on <span class="hljs-string">$&#123;</span>machine&#125;<br><span class="hljs-string">$&#123;</span>color cyan&#125;运行时间：<span class="hljs-string">$&#123;</span>uptime&#125;<br><span class="hljs-string">$&#123;</span>color cyan&#125;当前用户：<span class="hljs-string">$&#123;</span>exec whoami&#125;<br><span class="hljs-string">$&#123;</span>color white&#125;------------------------------------------------------------<br><span class="hljs-string">$&#123;</span>color red&#125;<span class="hljs-type">CPU</span>使用率：<span class="hljs-string">$&#123;</span>cpu&#125;%  <span class="hljs-string">$&#123;</span>cpubar <span class="hljs-number">6</span>,<span class="hljs-number">150</span>&#125;<br><span class="hljs-string">$&#123;</span>color red&#125;内存使用：<span class="hljs-string">$&#123;</span>mem&#125; / <span class="hljs-string">$&#123;</span>memmax&#125; <span class="hljs-string">$&#123;</span>membar <span class="hljs-number">6</span>,<span class="hljs-number">150</span>&#125;<br><span class="hljs-string">$&#123;</span>color red&#125;交换分区：<span class="hljs-string">$&#123;</span>swap&#125; / <span class="hljs-string">$&#123;</span>swapmax&#125; <span class="hljs-string">$&#123;</span>swapbar <span class="hljs-number">6</span>,<span class="hljs-number">150</span>&#125;<br><span class="hljs-string">$&#123;</span>color white&#125;------------------------------------------------------------<br><span class="hljs-string">$&#123;</span>color blue&#125;硬盘使用：<span class="hljs-string">$&#123;</span>fs_used /&#125; / <span class="hljs-string">$&#123;</span>fs_size /&#125; <span class="hljs-string">$&#123;</span>fs_bar <span class="hljs-number">6</span>,<span class="hljs-number">150</span>&#125;<br><span class="hljs-string">$&#123;</span>color blue&#125;当前显卡：<span class="hljs-string">$&#123;</span>execi <span class="hljs-number">60</span> glxinfo | grep <span class="hljs-comment">&quot;OpenGL renderer&quot;</span> | cut -d: -f2 | sed <span class="hljs-string">&#x27;s/^[ \t]*//&#x27;</span>&#125;<br><span class="hljs-string">$&#123;</span>color blue&#125;当前桌面：<span class="hljs-string">$&#123;</span>exec echo <span class="hljs-string">$X</span>DG_SESSION_TYPE&#125;<br><span class="hljs-string">$&#123;</span>color white&#125;------------------------------------------------------------<br><span class="hljs-string">$&#123;</span>color green&#125;网络流量：<br><span class="hljs-string">$&#123;</span>color green&#125;下载：<span class="hljs-string">$&#123;</span>downspeed wlo1&#125; kB/s  上传：<span class="hljs-string">$&#123;</span>upspeed wlo1&#125; kB/s<br><span class="hljs-string">$&#123;</span>color green&#125;<span class="hljs-type">IP</span>：<span class="hljs-string">$&#123;</span>addr wlo1&#125;<br><span class="hljs-string">$&#123;</span>color green&#125;<span class="hljs-type">WiFi</span> 状态<br><span class="hljs-string">$&#123;</span>color green&#125;<span class="hljs-type">SSID</span>: <span class="hljs-string">$&#123;</span>exec nmcli -t -f active,ssid dev wifi | grep <span class="hljs-string">&#x27;^是&#x27;</span> | cut -d: -f2&#125;<br><span class="hljs-string">$&#123;</span>color green&#125;信号强度: <span class="hljs-string">$&#123;</span>exec nmcli -t -f signal dev wifi | sort -nr | head -n <span class="hljs-number">1</span>&#125;%<br><span class="hljs-string">$&#123;</span>color white&#125;------------------------------------------------------------<br><span class="hljs-string">$&#123;</span>color pink&#125;屏幕亮度: <span class="hljs-string">$&#123;</span>exec brightnessctl g | awk <span class="hljs-string">&#x27;&#123;print int($1/100 * 100) &quot;%&quot;&#125;&#x27;</span>&#125;<br><span class="hljs-string">$&#123;</span>color pink&#125;温度：<span class="hljs-string">$&#123;</span>execi <span class="hljs-number">10</span> sensors | grep <span class="hljs-string">&#x27;Package id 0:&#x27;</span> | cut -d<span class="hljs-string">&#x27; &#x27;</span> -f5&#125;<br><br># <span class="hljs-string">$&#123;</span>color pink&#125;电池状态：<span class="hljs-string">$&#123;</span>battery_short <span class="hljs-type">BAT0</span>&#125; <span class="hljs-string">$&#123;</span>battery_bar <span class="hljs-number">6</span>,<span class="hljs-number">150</span> <span class="hljs-type">BAT0</span>&#125;<br><br><span class="hljs-string">$&#123;</span>color pink&#125;剩余电量：<span class="hljs-string">$&#123;</span>battery_percent&#125;%<br><span class="hljs-string">$&#123;</span>color pink&#125;爱小旋的一天！！！<br>]];<br></code></pre></td></tr></table></figure><blockquote><p>[!CAUTION]</p><p>这样就可以在系统屏幕上显示小卡片信息，还不能开机自启，需要添加desktop文件</p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo vim <span class="hljs-regexp">/etc/</span>xdg<span class="hljs-regexp">/autostart/</span>conky.desktop<br></code></pre></td></tr></table></figure><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">vim ～/.config/<span class="hljs-built_in">auto</span>start/conky.desktop<br></code></pre></td></tr></table></figure><blockquote><p>[!TIP]</p><p>这两个文件自启路径都可以，加入以下内容</p></blockquote><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Desktop Entry]</span><br><span class="hljs-attr">Type</span>=Application<br><span class="hljs-attr">Exec</span>=sh -c <span class="hljs-string">&quot;sleep 5 &amp;&amp; conky -c /home/zhh/.config/conky/comprehensive.conf&quot;</span><br><span class="hljs-attr">Hidden</span>=<span class="hljs-literal">false</span><br><span class="hljs-attr">NoDisplay</span>=<span class="hljs-literal">false</span><br><span class="hljs-attr">Name</span>=Conky<br><span class="hljs-attr">Comment</span>=启动 Conky 桌面监视器<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ollama+Docker配置</title>
    <link href="/2025/08/18/Ollama%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8/"/>
    <url>/2025/08/18/Ollama%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="安装ollama"><a href="#安装ollama" class="headerlink" title="安装ollama"></a>安装ollama</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S ollama<br></code></pre></td></tr></table></figure><blockquote><p>[!IMPORTANT]</p><p>如需 GPU 支持，根据你的显卡类型选择安装：</p><ul><li>NVIDIA：安装 ollama-cuda</li><li>AMD：安装 ollama-rocm</li></ul></blockquote><blockquote><p>启用&#x2F;启动服务</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">enable</span> --now ollama.service<br></code></pre></td></tr></table></figure><h3 id="安装模型"><a href="#安装模型" class="headerlink" title="安装模型"></a>安装模型</h3><blockquote><p>[!TIP]</p><p>正常安装模型是ollama run gemma3:270m</p><p>推荐手动安装避免中途网络问题，首先创建模型存放文件夹</p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkdir -r <span class="hljs-regexp">/home/</span><span class="hljs-variable">$HOME</span><span class="hljs-regexp">/.ollama/m</span>odels<span class="hljs-regexp">/blobs/</span><br></code></pre></td></tr></table></figure><blockquote><p>[!IMPORTANT]</p><p>Ai对话模型推荐在这里下载：<a href="https://huggingface.co/">https://huggingface.co/</a></p><p>在网站搜索模型名称即可，例如：LLaMA、Qwen、Seed等等</p><p>将下载好的gguf后缀模型文件重命名为哈希值</p></blockquote><p>获取哈希值</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">shasum</span> -a <span class="hljs-number">256</span> <span class="hljs-regexp">*.gguf</span><br></code></pre></td></tr></table></figure><p>创建Modelfile文件夹</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkdir <span class="hljs-regexp">/home/</span><span class="hljs-variable">$HOME</span><span class="hljs-regexp">/.ollama/m</span>odels<span class="hljs-regexp">/Modelfile/</span><br></code></pre></td></tr></table></figure><p>创建Modelfile文件</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">vim Modelfile</span><br></code></pre></td></tr></table></figure><p>添加如下代码</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">FROM <span class="hljs-regexp">/home/</span><span class="hljs-variable">$HOME</span><span class="hljs-regexp">/.ollama/m</span>odels<span class="hljs-regexp">/blobs/</span><span class="hljs-number">33981</span>adf6bae52c503fb5c24f72539010632f7ed290a56c1315a8cd50adca587.gguf<br></code></pre></td></tr></table></figure><p>创建模型运行</p><blockquote><p>[!IMPORTANT]</p><p>Nous-Hermes-2-Mistral-7B-DPO.Q8_0：模型名字即可</p><p>Modelfile：刚刚创建的Modelfile文件</p></blockquote><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ollama</span> create Nous-Hermes-<span class="hljs-number">2</span>-Mistral-<span class="hljs-number">7</span>B-DPO.Q8_0 -f Modelfile<br></code></pre></td></tr></table></figure><p>运行ollama查看模型</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">ollama list</span><br></code></pre></td></tr></table></figure><h3 id="Docker从安装到代理"><a href="#Docker从安装到代理" class="headerlink" title="Docker从安装到代理"></a>Docker从安装到代理</h3><p>安装docker包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S docker<br></code></pre></td></tr></table></figure><p>启用docker.service服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">enable</span> --now docker.service<br></code></pre></td></tr></table></figure><p>也可以使用docker.socket将会在第一次启动Docker时启动，使用后者可以减少开机启动时间</p><p>如果你想以普通用户身份运行docker的话，添加你自己到 docker 用户组</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">gpasswd  -<span class="hljs-selector-tag">a</span>  <span class="hljs-selector-attr">[用户名]</span>  <span class="hljs-selector-attr">[组名]</span><br></code></pre></td></tr></table></figure><p>将用户从组中移除</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">gpasswd  -d  <span class="hljs-selector-attr">[用户名]</span>  <span class="hljs-selector-attr">[组名]</span><br></code></pre></td></tr></table></figure><p>重启服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl daemon-reload<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl restart docker.service<br></code></pre></td></tr></table></figure><p>查看当前配置</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">sudo</span> docker <span class="hljs-literal">info</span><br></code></pre></td></tr></table></figure><h3 id="配置代理"><a href="#配置代理" class="headerlink" title="配置代理"></a>配置代理</h3><p>在执行docker pull时，是由守护进程dockerd来执行。因此代理需要配在dockerd的环境中。而这个环境则是受systemd所管控</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">mkdir</span> /etc/systemd/system/docker.service.d<br></code></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">sudo <span class="hljs-keyword">vim</span> /etc/systemd/<span class="hljs-built_in">system</span>/docker.service.d/proxy.<span class="hljs-keyword">conf</span><br></code></pre></td></tr></table></figure><blockquote><p>[!IMPORTANT]</p><p>键入如下配置</p><p>HTTP_PROXY或HTTPS_PROXY 分别用于代理访问 socks5请求（也可以是http或https请求，根据自己代理为准），如果想某个 IP或域名不走代理则配置到 NO_PROXY中</p><p>socks5:&#x2F;&#x2F;127.0.0.1:1080&#x2F;必须是免密代理</p></blockquote><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Service]</span><br><span class="hljs-attr">Environment</span>=<span class="hljs-string">&quot;HTTP_PROXY=socks5://127.0.0.1:1080/&quot;</span><br><span class="hljs-attr">Environment</span>=<span class="hljs-string">&quot;HTTPS_PROXY=socks6://127.0.0.1:1080/&quot;</span><br><span class="hljs-attr">Environment</span>=<span class="hljs-string">&quot;NO_PROXY=localhost,.example.com&quot;</span><br></code></pre></td></tr></table></figure><p>最后重启docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl daemon-reload<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl restart docker.service<br></code></pre></td></tr></table></figure><h3 id="安装openwebui"><a href="#安装openwebui" class="headerlink" title="安装openwebui"></a>安装openwebui</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs kotlin">docker run -d -p <span class="hljs-number">3000</span>:<span class="hljs-number">8080</span> --add-host=host.docker.<span class="hljs-keyword">internal</span>:host-gateway -v <span class="hljs-keyword">open</span>-webui:/app/backend/<span class="hljs-keyword">data</span> --name <span class="hljs-keyword">open</span>-webui --restart always ghcr.io/<span class="hljs-keyword">open</span>-webui/<span class="hljs-keyword">open</span>-webui:main<br></code></pre></td></tr></table></figure><h3 id="Open-WebUI-设置"><a href="#Open-WebUI-设置" class="headerlink" title="Open WebUI 设置"></a>Open WebUI 设置</h3><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs 1c">OpenAI API 管理<br>OpenAI API连接 https<span class="hljs-punctuation">:</span><span class="hljs-comment">//api.openai.com/v1</span><br>Ollama API 管理<br>Ollama API连接 http<span class="hljs-punctuation">:</span><span class="hljs-comment">//host.docker.internal:11434</span><br><br>最后浏览器打开http<span class="hljs-punctuation">:</span><span class="hljs-comment">//localhost:3000</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Samba共享文件</title>
    <link href="/2025/08/13/Samba%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6/"/>
    <url>/2025/08/13/Samba%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="在-Arch-Linux-上安装并配置-Samba-共享文件可以按照以下步骤操作："><a href="#在-Arch-Linux-上安装并配置-Samba-共享文件可以按照以下步骤操作：" class="headerlink" title="在 Arch Linux 上安装并配置 Samba 共享文件可以按照以下步骤操作："></a>在 Arch Linux 上安装并配置 Samba 共享文件可以按照以下步骤操作：</h1><h2 id="步骤-1-安装-Samba"><a href="#步骤-1-安装-Samba" class="headerlink" title="步骤 1: 安装 Samba"></a>步骤 1: 安装 Samba</h2><p>使用 pacman 安装 Samba：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S samba avahi <br></code></pre></td></tr></table></figure><p>安装 avahi软件包， 然后启用&#x2F;启动 avahi-daemon.service 通过 Zeroconf 使 Samba 服务器可被发现</p><h2 id="步骤-2-配置-Samba"><a href="#步骤-2-配置-Samba" class="headerlink" title="步骤 2: 配置 Samba"></a>步骤 2: 配置 Samba</h2><ol><li><p>编辑 Samba 配置文件：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> vim /etc/samba/smb.conf<br></code></pre></td></tr></table></figure><blockquote><p>[!IMPORTANT]</p><p><strong>path根据自己共享路径</strong></p></blockquote><pre><code class="hljs"># 全局设置区域[global]# 设置工作组名称，Windows 默认是 WORKGROUP，保持一致可避免兼容问题workgroup = WORKGROUP# 设置 Samba 服务器的描述信息server string = Arch Samba Server# 设置主机在网络上的 NetBIOS 名称（即网络识别名）netbios name = archserver# 认证方式设为 &quot;user&quot;，表示用户级别的访问控制（每个用户有独立账号）security = user# 如果输入的用户名无效，则将其映射为 guest 用户（匿名访问）map to guest = Bad User# 第一个共享目录设置 —— Tools[tools]# 设置共享目录的实际路径path = /run/media/Tools/# 允许被浏览，即用户可以在资源管理器中看到这个共享browseable = yes# 允许写入权限（不设置的话默认只读）writable = yes# 允许 guest（匿名）用户访问guest ok = yes# 不只读（与 writable 一起使用）read only = no# 创建文件的默认权限（八进制 0777 表示所有人可读写执行）create mask = 0777# 创建目录的默认权限（同上）directory mask = 0777# 第二个共享目录设置 —— Public[public]# 设置共享目录的实际路径path = /home/Public# 允许浏览该共享browseable = yes# 允许写入writable = yes# 允许 guest（匿名）访问guest ok = yes# 设置为非只读read only = no# 创建文件的权限create mask = 0777# 创建目录的权限directory mask = 0777</code></pre></li></ol><h2 id="步骤-3-创建共享目录并设置权限（可跳过）"><a href="#步骤-3-创建共享目录并设置权限（可跳过）" class="headerlink" title="步骤 3: 创建共享目录并设置权限（可跳过）"></a>步骤 3: 创建共享目录并设置权限（可跳过）</h2><p>确保共享目录存在，并设置正确的权限：<br><code>sudo mkdir -p /path/to/shared/directory</code><br><code>sudo chmod -R 777 /path/to/shared/directory</code><br>如果只允许特定用户访问，可以用以下方式设置权限：<br><code>sudo chown -R username:username /path/to/shared/directory</code></p><h2 id="步骤-4-设置-Samba-用户"><a href="#步骤-4-设置-Samba-用户" class="headerlink" title="步骤 4: 设置 Samba 用户"></a>步骤 4: 设置 Samba 用户</h2><p>为 Samba 添加用户（如果需要密码访问）：<br><code>sudo smbpasswd -a username</code></p><h2 id="步骤-5-启用并启动-Samba-服务"><a href="#步骤-5-启用并启动-Samba-服务" class="headerlink" title="步骤 5: 启用并启动 Samba 服务"></a>步骤 5: 启用并启动 Samba 服务</h2><p>启动和启用 Samba 服务：<br><code>sudo systemctl start smb nmb</code><br><code>sudo systemctl enable smb nmb</code></p><h1 id="步骤-6-防火墙设置（可选）"><a href="#步骤-6-防火墙设置（可选）" class="headerlink" title="步骤 6: 防火墙设置（可选）"></a>步骤 6: 防火墙设置（可选）</h1><p>如果启用了防火墙，需要开放相关端口：<br><code>sudo iptables -A INPUT -p tcp --dport 139 -j ACCEPT</code><br><code>sudo iptables -A INPUT -p tcp --dport 445 -j ACCEPT</code><br><code>sudo iptables -A INPUT -p udp --dport 137 -j ACCEPT</code><br><code>sudo iptables -A INPUT -p udp --dport 138 -j ACCEPT</code><br>或者使用 ufw：<br><code>sudo ufw allow Samba</code></p><h1 id="步骤-7-测试共享"><a href="#步骤-7-测试共享" class="headerlink" title="步骤 7: 测试共享"></a>步骤 7: 测试共享</h1><ol><li>在 Windows 或其他设备上打开文件管理器。</li><li>输入地址，例如 \archserver 或 \&lt;服务器IP地址&gt;。</li><li>访问共享目录。<br>如果遇到问题，可以查看 Samba 日志来排查错误：<br><code>sudo journalctl -u smb</code><br><code>sudo journalctl -u nmb</code></li></ol>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Arch Linux安装引导</title>
    <link href="/2025/08/11/arch%E5%BC%95%E5%AF%BC%E8%AE%BE%E7%BD%AE/"/>
    <url>/2025/08/11/arch%E5%BC%95%E5%AF%BC%E8%AE%BE%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="安装grub、efibootefi"><a href="#安装grub、efibootefi" class="headerlink" title="安装grub、efibootefi"></a>安装grub、efibootefi</h3><blockquote><p>[!NOTE]</p><p>这里在安装系统时已经安装</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S grub efibootefi<br></code></pre></td></tr></table></figure><blockquote><p>[!CAUTION]</p><ul><li><p>确保你安装 GRUB 软件包和运行命令的系统是你想用 GRUB 引导的系统。也就是说如果你是通过安装介质引导的，你需要在 chroot 之后再运行 <code>grub-install</code>。如果因为某些原因不得不在安装的系统之外运行 <code>grub-install</code>，在后面加上 <code>--boot-directory=</code> 选项来指定挂载 <code>/boot</code> 目录的路径，例如 <code>--boot-directory=/mnt/boot</code>。</p></li><li><p>某些主板无法处理包含空格的 <code>bootloader-id</code></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">sudo grub-install <span class="hljs-attribute">--target</span>=x86_64-efi <span class="hljs-attribute">--efi-directory</span>=esp <span class="hljs-attribute">--bootloader-id</span>=GRUB<br></code></pre></td></tr></table></figure></li></ul></blockquote><h4 id="最后生成-grub-cfg"><a href="#最后生成-grub-cfg" class="headerlink" title="最后生成 grub.cfg"></a>最后生成 grub.cfg</h4><blockquote><p>[!NOTE]</p><p>默认的文件路径是 <code>/boot/grub/grub.cfg</code></p><p>使用 grub-mkconfig 工具来生成</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> grub-mkconfig -o /boot/grub/grub.cfg<br></code></pre></td></tr></table></figure><h4 id="以上是正常安装grub必备的内容，可以跳过不需要"><a href="#以上是正常安装grub必备的内容，可以跳过不需要" class="headerlink" title="以上是正常安装grub必备的内容，可以跳过不需要"></a>以上是正常安装grub必备的内容，可以跳过不需要</h4><blockquote><p>[!IMPORTANT]</p><p>编辑以下文件，并加入代码块内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> vim /etc/grub.d/40_custom<br></code></pre></td></tr></table></figure></blockquote><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-comment">#!/bin/sh</span><br><span class="hljs-keyword">exec</span> tail -n +<span class="hljs-number">3</span> <span class="hljs-variable">$0</span><br><br><span class="hljs-comment"># This file provides an easy way to add custom menu entries.  Simply type the</span><br><br><span class="hljs-comment"># menu entries you want to add after this comment.  Be careful not to change</span><br><br><span class="hljs-comment"># the &#x27;exec tail&#x27; line above.</span><br><br>menuentry <span class="hljs-string">&quot;Windows 11&quot;</span> --<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">windows</span> --<span class="hljs-title">class</span> <span class="hljs-title">os</span> </span>&#123;<br>    insmod part_gpt<br>    insmod fat<br>    insmod chain<br>    search --<span class="hljs-keyword">no</span>-floppy --set=root --fs-uuid F69C-7E34<br>    chainloader /EFI/Microsoft/Boot/bootmgfw.efi<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="最后生成-grub-cfg-1"><a href="#最后生成-grub-cfg-1" class="headerlink" title="最后生成 grub.cfg"></a>最后生成 grub.cfg</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> grub-mkconfig -o /boot/grub/grub.cfg<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Arch Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Arch Linux配置PATH的几种例子</title>
    <link href="/2025/08/10/arch%E7%9A%84PATH%E8%AE%BE%E7%BD%AE/"/>
    <url>/2025/08/10/arch%E7%9A%84PATH%E8%AE%BE%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>首先需要有代理的条件，例如trojan、v2ray、shadowsocks、WireGuard等等</p><p>其次是进行shell代理，其实可以使用shell专用代理工具，例如：proxychains、tsocks、redsocks等等，这里我们就讲述shell方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim ~/.bashrc<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">export</span> <span class="hljs-attribute">http_proxy</span>=<span class="hljs-string">&quot;socks5://127.0.0.1:1089&quot;</span><br><span class="hljs-built_in">export</span> <span class="hljs-attribute">https_proxy</span>=<span class="hljs-string">&quot;socks5://127.0.0.1:1089&quot;</span><br><span class="hljs-built_in">export</span> <span class="hljs-attribute">all_proxy</span>=<span class="hljs-string">&quot;socks5://127.0.0.1:1089&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/.bashrc<br></code></pre></td></tr></table></figure><p>shell代理就生效了，不管是yay、pacman、apt、yum等都是走127.0.0.1:1089网络数据</p><h3 id="pip报错"><a href="#pip报错" class="headerlink" title="pip报错"></a>pip报错</h3><p>在使用<strong>pip</strong>过程中，会提示以下提示，说明<strong>pip</strong>不支持<strong>~&#x2F;.bashrc</strong>这种代理</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs subunit">$ pip install pipenv <br><span class="hljs-keyword">ERROR: </span>Could not install packages due to an OSError: Missing dependencies for SOCKS support. <br><br>**[**notice**]** A new release of pip available: 22.3 -&gt; 25.1.1 <br>**[**notice**]** To update, run: pip3 install --upgrade pip<br></code></pre></td></tr></table></figure><p>需注释上面的代理，并用<strong>pip</strong>安装一个软件包：<strong>PySocks</strong>，先使用<strong>proxychains</strong>等工具的代理方式解决，如下</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">proxychains pip <span class="hljs-keyword">install</span> PySocks<br></code></pre></td></tr></table></figure><blockquote><p><strong>PySocks</strong>解决缺少 <strong>SOCKS</strong> 支持的问题</p><p>现在可以恢复<strong>~&#x2F;.bashrc</strong>中设置的代理信息，正常<strong>pip install PySocks</strong>即可</p></blockquote><h3 id="PATH设置"><a href="#PATH设置" class="headerlink" title="PATH设置"></a>PATH设置</h3><p>添加如下命令，即可全局使用<strong>hexo clean、hexo server、hexo generate</strong>等等命令</p><blockquote><p>[!IMPORTANT]</p><p><strong>PATH&#x3D;后面以自己路径为主</strong></p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">export</span> <span class="hljs-attribute">PATH</span>=<span class="hljs-variable">$HOME</span>/src/myblog/node_modules/hexo/bin:$PATH<br></code></pre></td></tr></table></figure><p>scrcpy安卓控制</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">export</span> <span class="hljs-attribute">PATH</span>=/opt/hsprogram/broker/scrcpy-linux-x86_64-v3.3.1:$PATH<br></code></pre></td></tr></table></figure><p>7z解压缩</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">export</span> <span class="hljs-attribute">PATH</span>=/opt/hsprogram/binary/7z:$PATH<br></code></pre></td></tr></table></figure><p>不同版本的python</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$HOME</span>/src/python311/bin:<span class="hljs-variable">$PATH</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$HOME</span>/src/python310/bin:<span class="hljs-variable">$PATH</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Arch Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NTFS自动挂载</title>
    <link href="/2025/08/09/%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BDNTFS%E7%A1%AC%E7%9B%98/"/>
    <url>/2025/08/09/%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BDNTFS%E7%A1%AC%E7%9B%98/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="自动挂载"><a href="#自动挂载" class="headerlink" title="自动挂载"></a>自动挂载</h1><ul><li>查看分区信息</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> fdisk -l<br></code></pre></td></tr></table></figure><ul><li>读取UUID码</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> blkid /dev/nvme0n1p6<br></code></pre></td></tr></table></figure><ul><li>编辑fstab加入UUID信息</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> vim /etc/fstab<br></code></pre></td></tr></table></figure><ul><li>键入&#x2F;dev&#x2F;nvme0n1p6</li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">UUID</span>=<span class="hljs-number">23423423242</span>/run/media/win11toolsntfs-<span class="hljs-number">3</span>gdefaults<span class="hljs-number">0</span><span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><blockquote><p>[!NOTE]</p><p>win11tools自定义创建即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">mkdir</span> /run/media/win11tools<br></code></pre></td></tr></table></figure><p>ntfs-3g是挂载的ntfs硬盘</p><p>最后重启即可</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Arch Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NVIDIA早启动</title>
    <link href="/2025/08/08/%E6%97%A9%E5%90%AF%E5%8A%A8/"/>
    <url>/2025/08/08/%E6%97%A9%E5%90%AF%E5%8A%A8/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="早启动（解决NVIDIA在wayland问题）"><a href="#早启动（解决NVIDIA在wayland问题）" class="headerlink" title="早启动（解决NVIDIA在wayland问题）"></a>早启动（解决NVIDIA在wayland问题）</h2><p>对于基本功能，只需添加内核参数就足够了。如果您希望确保驱动能被最早加载，或者遇到了启动问题（例如 nvidia 内核模块在显示管理器启动后才被加载），可以将 nvidia、nvidia_modeset、nvidia_uvm 和 nvidia_drm 添加到 initramfs 中。请参阅内核模块#早期模块加载以了解如何配置您的 initramfs 生成器。mkinitcpio用户可能还需要在每次nvidia包驱动程序更新时重新生成 initramfs映像</p><h4 id="编辑mkinitcpio配置文件"><a href="#编辑mkinitcpio配置文件" class="headerlink" title="编辑mkinitcpio配置文件"></a>编辑mkinitcpio配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> vim /etc/mkinitcpio.conf<br></code></pre></td></tr></table></figure><blockquote><p>[!IMPORTANT]</p><p>MODULES 添加模块</p></blockquote><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">MODULES=(nvidia nvidi<span class="hljs-built_in">a_modeset</span> nvidi<span class="hljs-built_in">a_uvm</span> nvidi<span class="hljs-built_in">a_drm</span>)<br></code></pre></td></tr></table></figure><p>如果你将驱动添加到了initramfs中，记得每次更新nvidia包驱动程序后都要运行mkinitcpio</p><h4 id="Pacman-钩子"><a href="#Pacman-钩子" class="headerlink" title="Pacman 钩子"></a>Pacman 钩子</h4><p>为了避免更新NVIDIA驱动之后忘了更新initramfs，你可以使用Pacman Hooks：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs routeros">/etc/pacman.d/hooks/nvidia.hook<br>[Trigger]<br><span class="hljs-attribute">Operation</span>=Install<br><span class="hljs-attribute">Operation</span>=Upgrade<br><span class="hljs-attribute">Operation</span>=Remove<br><span class="hljs-attribute">Type</span>=Package<br><span class="hljs-attribute">Target</span>=nvidia<br><span class="hljs-attribute">Target</span>=linux<br><span class="hljs-comment"># Change the linux part above and in the Exec line if a different kernel is used</span><br><span class="hljs-comment"># 如果使用不同的内核，请更改上面的 linux 部分和 Exec 行中的内容，例如更改为Target=nvidia-open</span><br><br>[Action]<br><span class="hljs-attribute">Description</span>=Updating Nvidia module <span class="hljs-keyword">in</span> initcpio<br><span class="hljs-attribute">Depends</span>=mkinitcpio<br><span class="hljs-attribute">When</span>=PostTransaction<br>NeedsTargets<br><span class="hljs-attribute">Exec</span>=/bin/sh -c <span class="hljs-string">&#x27;while read -r trg; do case $trg in linux) exit 0; esac; done; /usr/bin/mkinitcpio -P&#x27;</span><br></code></pre></td></tr></table></figure><p>务必保证Target项所设置的软件包与你在前面的安装过程中所使用的相符（例如nvidia 或 nvidia-dkms 或 nvidia-lts 或 nvidia-ck-something等）</p><blockquote><p>以上设置完毕，需要运行一次mkinitcpio</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> mkinitcpio -P<br></code></pre></td></tr></table></figure><h4 id="DRM-内核级显示模式设置"><a href="#DRM-内核级显示模式设置" class="headerlink" title="DRM 内核级显示模式设置"></a>DRM 内核级显示模式设置</h4><p>由于NVIDIA不支持自动KMS晚加载，要正常运行Wayland合成器或没有root权限的 Xorg，您必须启用DRM (直接渲染管理器)内核级显示模式设置，nvidia-utils包560.35.03-5版本后默认启用DRM (Direct Rendering Manager) 内核级显示模式设置，如您使用更旧的驱动版本，请为nvidia_drm模块设置以下内核模块参数：modeset&#x3D;1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> vim /etc/default/grub<br></code></pre></td></tr></table></figure><blockquote><p>[!IMPORTANT]</p><p>在 GRUB_CMDLINE_LINUX_DEFAULT的quiet后面添加nvidia_drm.modeset&#x3D;1</p></blockquote><p>您可以使用以下命令验证DRM是否自动启用：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat <span class="hljs-regexp">/sys/m</span>odule<span class="hljs-regexp">/nvidia_drm/</span>parameters/modeset<br></code></pre></td></tr></table></figure><blockquote><p>其应当返回 Y</p></blockquote><p>最后更新一下Grub</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> grub-mkconfig -o /boot/grub/grub.cfg<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Arch Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Arch Linux必备软件</title>
    <link href="/2025/08/07/%E5%AE%89%E8%A3%85%E5%BF%85%E5%A4%87%E8%BD%AF%E4%BB%B6/"/>
    <url>/2025/08/07/%E5%AE%89%E8%A3%85%E5%BF%85%E5%A4%87%E8%BD%AF%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs routeros">asusctl --help<br><br>asusctl aura static -c 27B7A1<br><br><br>asusctl<span class="hljs-built_in"> profile </span>--profile-<span class="hljs-built_in">set</span> Quiet         # 静音模式（通常可以调节亮度）<br>asusctl<span class="hljs-built_in"> profile </span>--profile-<span class="hljs-built_in">set</span> Balanced      # 均衡模式<br>asusctl<span class="hljs-built_in"> profile </span>--profile-<span class="hljs-built_in">set</span> Performance   # 性能模式（可能调不了亮度）<br><br>Starting version 6.1.12<br>Missing arg <span class="hljs-keyword">or</span> command<br><br>Optional arguments:<br>  -h, --help          <span class="hljs-built_in">print</span> help message<br>  -n, --next          toggle <span class="hljs-keyword">to</span> next<span class="hljs-built_in"> profile </span><span class="hljs-keyword">in</span> list<br>  -l, --list          list available profiles<br>  -p, --profile-<span class="hljs-built_in">get</span>   <span class="hljs-built_in">get</span><span class="hljs-built_in"> profile </span>      # 查看当前模式<br>  -P, --profile-<span class="hljs-built_in">set</span>   <span class="hljs-built_in">set</span> the active<span class="hljs-built_in"> profile </span>   # 设置当期模式<br></code></pre></td></tr></table></figure><h3 id="正版我的世界启动器"><a href="#正版我的世界启动器" class="headerlink" title="正版我的世界启动器"></a>正版我的世界启动器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S minecraft-launcher<br></code></pre></td></tr></table></figure><h3 id="Java11"><a href="#Java11" class="headerlink" title="Java11"></a>Java11</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S jdk11-openjdk <br></code></pre></td></tr></table></figure><h3 id="拉取程序"><a href="#拉取程序" class="headerlink" title="拉取程序"></a>拉取程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S git<br></code></pre></td></tr></table></figure><p><strong>设置git的邮箱昵称</strong></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.email</span> <span class="hljs-string">&quot;2199654030@qq.com&quot;</span><br>git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.name</span> <span class="hljs-string">&quot;HuiKeJi&quot;</span><br></code></pre></td></tr></table></figure><h3 id="WPSOffice"><a href="#WPSOffice" class="headerlink" title="WPSOffice"></a>WPSOffice</h3><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">yay</span> -S wps-office-<span class="hljs-meta">cn</span> wps-office-mui-zh-<span class="hljs-meta">cn</span> ttf-wps-fonts<br></code></pre></td></tr></table></figure><p><strong>修复WPS的World和PDF</strong></p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-title">yay</span> -<span class="hljs-type">S</span> libtiff5 freetype2-wps <br></code></pre></td></tr></table></figure><h3 id="微软编辑器"><a href="#微软编辑器" class="headerlink" title="微软编辑器"></a>微软编辑器</h3><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">yay</span> -S visual-studio-<span class="hljs-meta">code</span>-bin<br></code></pre></td></tr></table></figure><p><strong>设置字体</strong></p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey"><span class="hljs-built_in">Consolas,</span> Courier <span class="hljs-keyword">New</span>, Fira Code<br></code></pre></td></tr></table></figure><h3 id="downgrade回退Pacman更新"><a href="#downgrade回退Pacman更新" class="headerlink" title="downgrade回退Pacman更新"></a>downgrade回退Pacman更新</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S downgrade <br></code></pre></td></tr></table></figure><blockquote><p>[!TIP]</p><p>输入以下命令时，需要选择回退的版本（exiv2就是您要回退的包名）</p><p>再者会提示是否将exiv2加入忽略Pacman更新：N</p><p>以上意思是下次pacman -Syu时还会更新exiv2</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> downgrade exiv2 <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Arch Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>配置Windows11 Fonts</title>
    <link href="/2025/08/06/%E8%AE%BE%E7%BD%AEWindows11%E5%AD%97%E4%BD%93/"/>
    <url>/2025/08/06/%E8%AE%BE%E7%BD%AEWindows11%E5%AD%97%E4%BD%93/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="设置Windows字体"><a href="#设置Windows字体" class="headerlink" title="设置Windows字体"></a>设置Windows字体</h1><blockquote><p>[!NOTE]</p><p>创建本地存放字体文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">mkdir</span> /usr/local/share/fonts<br></code></pre></td></tr></table></figure><p>将字体复制到文件夹内</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo cp -r  <span class="hljs-regexp">/windows/</span>Windows<span class="hljs-regexp">/Fonts /u</span>sr<span class="hljs-regexp">/local/</span>share<span class="hljs-regexp">/fonts/</span>WindowsFonts/<br></code></pre></td></tr></table></figure><p>添加权限</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo chmod <span class="hljs-number">644</span> <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/share/</span>fonts<span class="hljs-regexp">/WindowsFonts/</span>*<br></code></pre></td></tr></table></figure><p>然后重新生成字体缓存</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">sudo fc-cache <span class="hljs-comment">--force</span><br></code></pre></td></tr></table></figure></blockquote>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Wayland更多设置</title>
    <link href="/2025/08/05/Wayland%E6%9B%B4%E5%A4%9A%E8%AE%BE%E7%BD%AE/"/>
    <url>/2025/08/05/Wayland%E6%9B%B4%E5%A4%9A%E8%AE%BE%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/applications/</span>.desktop<br></code></pre></td></tr></table></figure><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">Exec</span><span class="hljs-operator">=/</span>usr/bin/microsoft-edge-stable --disable-gpu %U<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">--ozone-platform</span>=wayland <span class="hljs-attribute">--enable-features</span>=WaylandWindowDecorations（这个会造成浏览器输入不了中文）<br></code></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">--proxy-server</span>=<span class="hljs-string">&quot;socks5://127.0.0.1:9900&quot;</span>（给google-chrome和brave-browser文件加入代理，其他不能用）<br></code></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl">--<span class="hljs-keyword">no</span>-sandbox <span class="hljs-variable">%U</span>（禁止沙盒）<br></code></pre></td></tr></table></figure><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">MimeType</span><span class="hljs-operator">=</span>x-scheme-handler/termius<span class="hljs-comment">;（实现软件跳转）</span><br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">Exec</span>=/opt/hsprogram/binary/huiishaochrome/google-chrome <span class="hljs-attribute">--proxy-server</span>=<span class="hljs-string">&quot;socks5://127.0.0.1:1089&quot;</span> <span class="hljs-attribute">--ozone-platform</span>=x11 --disable-gpu %U<br></code></pre></td></tr></table></figure><h3 id="如果Wayland在混合显卡模式下sddm无法正常启动需要如下操作"><a href="#如果Wayland在混合显卡模式下sddm无法正常启动需要如下操作" class="headerlink" title="如果Wayland在混合显卡模式下sddm无法正常启动需要如下操作"></a>如果Wayland在混合显卡模式下sddm无法正常启动需要如下操作</h3><blockquote><p>[!IMPORTANT]</p><p>没有问题时可跳过（建议设置早启动看看效果）</p></blockquote><blockquote><p>补齐依赖（默认layer-shell-qt存在）</p></blockquote><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gauss">sudo pacman -S  layer-<span class="hljs-built_in">shell</span>-qt layer-<span class="hljs-built_in">shell</span>-qt5 <br></code></pre></td></tr></table></figure><blockquote><p>编辑如下</p></blockquote><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">sudo <span class="hljs-keyword">vim</span> /etc/sddm.<span class="hljs-keyword">conf</span>.d/<span class="hljs-number">10</span>-wayland.<span class="hljs-keyword">conf</span><br></code></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[General]</span><br><span class="hljs-attr">DisplayServer</span>=wayland<br><span class="hljs-attr">GreeterEnvironment</span>=QT_WAYLAND_SHELL_INTEGRATION=layer-shell<br><span class="hljs-section">[Wayland]</span><br><span class="hljs-attr">CompositorCommand</span>=kwin_wayland --drm --<span class="hljs-literal">no</span>-lockscreen --<span class="hljs-literal">no</span>-global-shortcuts --locale1 --inputmethod maliit-keyboard<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Arch Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nftables防火墙</title>
    <link href="/2025/08/05/%E9%85%8D%E7%BD%AEnftables%E8%AF%B4%E6%98%8E/"/>
    <url>/2025/08/05/%E9%85%8D%E7%BD%AEnftables%E8%AF%B4%E6%98%8E/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="安装nftables"><a href="#安装nftables" class="headerlink" title="安装nftables"></a>安装nftables</h1><p><code>sudo pacman -S nftables 正常已经内置无需安装</code><br><code>sudo pacman -Q nftables 查看是否存在</code></p><h1 id="打开服务"><a href="#打开服务" class="headerlink" title="打开服务"></a>打开服务</h1><p><code>sudo systemctl enable --now nftables.service</code><br><code>sudo systemctl status nftables.service 查看服务是否开启</code></p><h1 id="所有的放行和禁止端口都在-etc-nftables-conf下设置"><a href="#所有的放行和禁止端口都在-etc-nftables-conf下设置" class="headerlink" title="所有的放行和禁止端口都在&#x2F;etc&#x2F;nftables.conf下设置"></a>所有的放行和禁止端口都在&#x2F;etc&#x2F;nftables.conf下设置</h1><h3 id="修改后的配置（在你的基础上扩展端口规则）"><a href="#修改后的配置（在你的基础上扩展端口规则）" class="headerlink" title="修改后的配置（在你的基础上扩展端口规则）"></a>修改后的配置（在你的基础上扩展端口规则）</h3><h1 id="—————————————————"><a href="#—————————————————" class="headerlink" title="—————————————————-"></a>—————————————————-</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs conf">destroy table inet filter<br>table inet filter &#123;<br>  chain input &#123;<br>    type filter hook input priority filter<br>    policy drop<br><br>ct state invalid drop comment &quot;early drop of invalid connections&quot;<br>ct state &#123;established, related&#125; accept comment &quot;allow tracked connections&quot;<br>iif lo accept comment &quot;allow from loopback&quot;<br>ip protocol icmp accept comment &quot;allow icmp&quot;<br>meta l4proto ipv6-icmp accept comment &quot;allow icmp v6&quot;<br><br># 开放 SSH<br><br>tcp dport ssh accept comment &quot;allow sshd&quot;<br><br># 开放你需要的端口（TCP 和 UDP）（&#123;&#125;这是一个集合）<br>tcp dport &#123; 443, 80, 8080, 8090, 1090, 1080, 33612, 23361, 5000, 2017, 10170, 1314 &#125; accept comment &quot;allow specified tcp ports&quot;<br>udp dport &#123; 443, 80, 8080, 8090, 1090, 1080, 33612, 23361, 5000, 2017, 10170, 1314 &#125; accept comment &quot;allow specified udp ports&quot;<br><br># kdeconnect<br>tcp dport 1716-1764 accept comment &quot;allow kdeconnect tcp ports&quot;<br>udp dport 1716-1764 accept comment &quot;allow kdeconnect udp ports&quot;<br><br># 限制扫描类数据包<br>pkttype host limit rate 5/second counter reject with icmpx type admin-prohibited<br><br># 统计默认拒绝包<br><br>counter<br><br>  &#125;<br><br>  chain forward &#123;<br>    type filter hook forward priority filter<br>    policy drop<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="—————————————————-1"><a href="#—————————————————-1" class="headerlink" title="—————————————————-"></a>—————————————————-</h1><blockquote><h4 id="将此内容保存为-etc-nftables-conf"><a href="#将此内容保存为-etc-nftables-conf" class="headerlink" title="将此内容保存为&#x2F;etc&#x2F;nftables.conf"></a>将此内容保存为&#x2F;etc&#x2F;nftables.conf</h4></blockquote><h4 id="重载防火墙规则："><a href="#重载防火墙规则：" class="headerlink" title="重载防火墙规则："></a>重载防火墙规则：</h4><p><code>sudo systemctl restart nftables.service</code></p><h1 id="为什么不放行端口也能访问？"><a href="#为什么不放行端口也能访问？" class="headerlink" title="为什么不放行端口也能访问？"></a>为什么不放行端口也能访问？</h1><h4 id="访问分为「出站」连接，「入站」连接"><a href="#访问分为「出站」连接，「入站」连接" class="headerlink" title="访问分为「出站」连接，「入站」连接"></a>访问分为「出站」连接，「入站」连接</h4><blockquote><p>Linux 防火墙默认是作用在「入站（input）」流量上的，浏览器访问网页属于「出站（output）」流量。</p></blockquote><h2 id="情况对比"><a href="#情况对比" class="headerlink" title="情况对比"></a>情况对比</h2><h6 id="使用方式属于什么方向是否被-input-链限制"><a href="#使用方式属于什么方向是否被-input-链限制" class="headerlink" title="使用方式属于什么方向是否被 input 链限制"></a>使用方式属于什么方向是否被 input 链限制</h6><ul><li>浏览器访问网页（代理转发）出站（output）❌ 不受限制</li><li>服务监听本地端口供外部访问入站（input）✅ 会被限制</li><li>v2ray 被客户端访问（例如手机连）入站（input）✅ 会被限制</li></ul><ol><li><p>情况 A：你访问外网网页</p></li><li><p>curl -x 127.0.0.1:2017 <a href="https://example.com/">https://example.com</a></p></li><li><p>请求从本地发出，走的是 output 链</p></li><li><p>即使你没开放 2017 端口，也能用</p></li><li><p>因为 你在本机发请求，本机响应自己，或是本机作为客户端连接远端服务器</p></li><li><p>情况 B：别人连接你的 2017 端口</p></li><li><p>比如你手机设置代理指向：</p></li><li><p>你的电脑IP:2017</p></li><li><p>这时手机的连接请求会命中 input 链，而你：</p></li><li><p>如果没有 tcp dport 2017 accept，防火墙就会拦住这次连接</p></li><li><p>❌ 所以不能访问</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>Arch Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于Python去水印</title>
    <link href="/2025/08/04/%E5%8E%BB%E6%B0%B4%E5%8D%B0/"/>
    <url>/2025/08/04/%E5%8E%BB%E6%B0%B4%E5%8D%B0/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="一、整体流程概览"><a href="#一、整体流程概览" class="headerlink" title="一、整体流程概览"></a>一、整体流程概览</h3><ol><li><p>用YOLOv8自动检测图片里的水印区域，得到水印的“掩码图”mask（即黑白图，白色是水印）</p></li><li><p>用 lama-cleaner 命令行（支持自定义mask）对原图+掩码批量自动修复，得到无水印图</p></li><li><p>全程批量自动，不用人工一张张画框</p></li><li><p><strong>路径是：&#x2F;src&#x2F;weibo&#x2F;rmwatermarks：</strong></p><p><strong>mask.py、lama-cleaner.py、venv、models</strong></p></li></ol><h3 id="二、详细分步教程"><a href="#二、详细分步教程" class="headerlink" title="二、详细分步教程"></a>二、详细分步教程</h3><h4 id="Step-1-环境准备"><a href="#Step-1-环境准备" class="headerlink" title="Step 1. 环境准备"></a>Step 1. 环境准备</h4><p>使用Python 3.10创建一个venv环境（推荐，避免torch等AI包兼容性问题）</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">python3</span>.<span class="hljs-number">10</span> -m venv venv<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> venv/bin/activate<br></code></pre></td></tr></table></figure><h4 id="Step-2-安装去水印工具以及依赖"><a href="#Step-2-安装去水印工具以及依赖" class="headerlink" title="Step 2. 安装去水印工具以及依赖"></a>Step 2. 安装去水印工具以及依赖</h4><blockquote><p>[!IMPORTANT]</p><p>安装ultralytics， 是一个专注于人工智能视觉检测，尤其是目标检测（Object Detection）领域的开源项目和公司。它最著名的产品是 YOLO（You Only Look Once）系列模型的官方实现</p><p>huggingface_hub，是huggingface&#x2F;diffusers&#x2F;transformers 系列模型托管和下载的基础包，很多 AI 项目都会自动带上</p><p>lama-cleaner，由 SOTA AI 模型提供支持的免费开源修复工具</p></blockquote><p>编辑requirements.txt文件</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">torch</span>==<span class="hljs-number">2</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>                # PyTorch，深度学习核心库，模型推理和训练用<br><span class="hljs-attribute">torchvision</span>==<span class="hljs-number">0</span>.<span class="hljs-number">15</span>.<span class="hljs-number">1</span>         # PyTorch 图像工具库，常用于数据处理和模型<br><span class="hljs-attribute">diffusers</span>==<span class="hljs-number">0</span>.<span class="hljs-number">16</span>.<span class="hljs-number">1</span>           # Huggingface Diffusers，主要用于扩散模型（如Lama等图像修复/生成）<br><span class="hljs-attribute">huggingface_hub</span>==<span class="hljs-number">0</span>.<span class="hljs-number">15</span>.<span class="hljs-number">1</span>     # Huggingface Hub客户端，下载模型/权重/上传数据<br><span class="hljs-attribute">lama</span>-cleaner==<span class="hljs-number">1</span>.<span class="hljs-number">2</span>.<span class="hljs-number">5</span>         # lama-cleaner 图像去水印/修复工具（可用mask批量修复）<br><span class="hljs-attribute">ultralytics</span>                  # YOLOv8官方库，目标检测模型推理用<br><span class="hljs-attribute">PySocks</span>                      # socks5代理支持（如某些pip需代理）<br><span class="hljs-attribute">PyQt5</span>                        # Qt5 GUI库，labelImg等图形界面依赖<br><span class="hljs-attribute">lxml</span>                         # 读写XML文件，labelImg等依赖VOC格式时必备<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">pip3</span>.<span class="hljs-number">10</span> install -r requirements.txt<br></code></pre></td></tr></table></figure><h4 id="Step-3-下载-准备YOLOv8水印检测模型"><a href="#Step-3-下载-准备YOLOv8水印检测模型" class="headerlink" title="Step 3. 下载&#x2F;准备YOLOv8水印检测模型"></a>Step 3. 下载&#x2F;准备YOLOv8水印检测模型</h4><blockquote><p>[!IMPORTANT]</p><p>可以直接用开源训练好的通用水印检测模型，比如这个yolov5-watermark（适配微博&#x2F;公众号&#x2F;小红书等）</p><p><strong>将后缀为pt的模型放在以下文件夹中，这是我的模型：best.pt</strong></p><p><strong>下载地址：<a href="https://pan.baidu.com/s/1xRzBTlBlDk0vM980rgB79g">https://pan.baidu.com/s/1xRzBTlBlDk0vM980rgB79g</a> 提取码: hui9</strong></p><p><strong>放在：src&#x2F;weibo&#x2F;rmwatermarks&#x2F;models&#x2F;</strong></p><p><strong>lama-cleaner 是基于“大LAMA模型（big-lama）”的 inpainting 修复工具，这个也是必须，省的lama-cleaner报错</strong></p><p><strong>下载地址：<a href="https://pan.baidu.com/s/10Q6cls-XbgH-ggF9LCetWQ">https://pan.baidu.com/s/10Q6cls-XbgH-ggF9LCetWQ</a> 提取码: hui9</strong></p><p><strong>放在：~&#x2F;.cache&#x2F;torch&#x2F;hub&#x2F;checkpoints&#x2F;big-lama.pt</strong></p></blockquote><p>big-lama.pt 就是 Lama 模型的核心“权重文件”（model checkpoint），是神经网络的所有参数，本地没这个文件，模型根本没法运行</p><h5 id="工作流程："><a href="#工作流程：" class="headerlink" title="工作流程："></a>工作流程：</h5><p>首次启动 lama-cleaner（无 big-lama.pt），程序会自动联网下载官方权重包到你的缓存目录（默认 PyTorch 习惯是 ~&#x2F;.cache&#x2F;torch&#x2F;hub&#x2F;checkpoints&#x2F;）。</p><p>下好后永久复用。你之后每次启动 lama-cleaner、调用 inpaint，都会直接加载这个 big-lama.pt</p><p>如果你删除 big-lama.pt，lama-cleaner 会再次自动下载（只要本地没找到权重文件）</p><h4 id="Step-4-批量检测所有图片，导出mask"><a href="#Step-4-批量检测所有图片，导出mask" class="headerlink" title="Step 4. 批量检测所有图片，导出mask"></a>Step 4. 批量检测所有图片，导出mask</h4><p><strong>新建检测脚本（这是我的路径你们可以选择自己的）</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">src</span>/weibo/rmwatermarks/<span class="hljs-attribute">mask</span><span class="hljs-selector-class">.py</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> ultralytics <span class="hljs-keyword">import</span> YOLO<br><span class="hljs-keyword">import</span> cv2<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br>model = YOLO(<span class="hljs-string">&#x27;/src/weibo/rmwatermarks/models/best.pt&#x27;</span>)<br><br>img_dir = <span class="hljs-string">&#x27;/src/weibo/rmwatermarks/image&#x27;</span><span class="hljs-comment"># 去水印的图片路径</span><br>mask_dir = <span class="hljs-string">&#x27;/src/weibo/rmwatermarks/mask/&#x27;</span><span class="hljs-comment"># 生成的mask文件路径，后面需要</span><br>os.makedirs(mask_dir, exist_ok=<span class="hljs-literal">True</span>)<br><br><span class="hljs-keyword">for</span> fname <span class="hljs-keyword">in</span> os.listdir(img_dir):<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> fname.lower().endswith((<span class="hljs-string">&#x27;.jpg&#x27;</span>, <span class="hljs-string">&#x27;.png&#x27;</span>, <span class="hljs-string">&#x27;.jpeg&#x27;</span>)):<br>        <span class="hljs-keyword">continue</span><br>    img_path = os.path.join(img_dir, fname)<br>    im = Image.<span class="hljs-built_in">open</span>(img_path)<br>    w, h = im.size<br>    mask = np.zeros((h, w), dtype=np.uint8)<br><br>    results = model(img_path)<br>    boxes = results[<span class="hljs-number">0</span>].boxes.xyxy.cpu().numpy()  <span class="hljs-comment"># [x1, y1, x2, y2]</span><br>    <span class="hljs-comment"># 自动截断，避免溢出边界</span><br>    <span class="hljs-keyword">for</span> box <span class="hljs-keyword">in</span> boxes:<br>        x1, y1, x2, y2 = <span class="hljs-built_in">map</span>(<span class="hljs-built_in">int</span>, box)<br>        x1 = <span class="hljs-built_in">max</span>(x1, <span class="hljs-number">0</span>)<br>        y1 = <span class="hljs-built_in">max</span>(y1, <span class="hljs-number">0</span>)<br>        x2 = <span class="hljs-built_in">min</span>(x2, w)<br>        y2 = <span class="hljs-built_in">min</span>(y2, h)<br>        mask[y1:y2, x1:x2] = <span class="hljs-number">255</span><br><br>    mask_img = Image.fromarray(mask)<br>    <span class="hljs-comment"># 统一保存为 png 格式</span><br>    mask_name = fname.rsplit(<span class="hljs-string">&#x27;.&#x27;</span>,<span class="hljs-number">1</span>)[<span class="hljs-number">0</span>] + <span class="hljs-string">&#x27;_mask.png&#x27;</span><br>    mask_img.save(os.path.join(mask_dir, mask_name), <span class="hljs-built_in">format</span>=<span class="hljs-string">&quot;PNG&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;生成mask：<span class="hljs-subst">&#123;mask_name&#125;</span>&quot;</span>)<br><br></code></pre></td></tr></table></figure><p>运行：<strong>python3.10 mask.py</strong></p><p>验证mask图和去水印图片是否一致（可跳过）</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">python3</span>.<span class="hljs-number">10</span> check_and_fix_mask.<span class="hljs-keyword">py</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br><span class="hljs-comment"># 配置目录pip install pillow numpy</span><br>img_dir = <span class="hljs-string">&#x27;/src/weibo/rmwatermarks/image&#x27;</span><br>mask_dir = <span class="hljs-string">&#x27;/src/weibo/rmwatermarks/mask&#x27;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">fix_mask</span>(<span class="hljs-params">img_path, mask_path</span>):<br>    <span class="hljs-keyword">try</span>:<br>        img = Image.<span class="hljs-built_in">open</span>(img_path)<br>        mask = Image.<span class="hljs-built_in">open</span>(mask_path)<br><br>        <span class="hljs-comment"># 1. 检查并自动修正尺寸</span><br>        <span class="hljs-keyword">if</span> mask.size != img.size:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[尺寸不一致] <span class="hljs-subst">&#123;os.path.basename(mask_path)&#125;</span>: <span class="hljs-subst">&#123;mask.size&#125;</span> -&gt; <span class="hljs-subst">&#123;img.size&#125;</span>&quot;</span>)<br>            mask = mask.resize(img.size, Image.NEAREST)<br><br>        <span class="hljs-comment"># 2. 强制灰度L模式</span><br>        <span class="hljs-keyword">if</span> mask.mode != <span class="hljs-string">&quot;L&quot;</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[模式不一致] <span class="hljs-subst">&#123;os.path.basename(mask_path)&#125;</span>: <span class="hljs-subst">&#123;mask.mode&#125;</span> -&gt; L&quot;</span>)<br>            mask = mask.convert(<span class="hljs-string">&quot;L&quot;</span>)<br><br>        <span class="hljs-comment"># 3. 二值化（只含0/255）</span><br>        mask_bin = mask.point(<span class="hljs-keyword">lambda</span> x: <span class="hljs-number">255</span> <span class="hljs-keyword">if</span> x &gt; <span class="hljs-number">127</span> <span class="hljs-keyword">else</span> <span class="hljs-number">0</span>, mode=<span class="hljs-string">&#x27;1&#x27;</span>).convert(<span class="hljs-string">&quot;L&quot;</span>)<br>        uniq = np.unique(np.array(mask_bin))<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> (np.array_equal(uniq, [<span class="hljs-number">0</span>]) <span class="hljs-keyword">or</span> np.array_equal(uniq, [<span class="hljs-number">255</span>]) <span class="hljs-keyword">or</span> np.array_equal(uniq, [<span class="hljs-number">0</span>, <span class="hljs-number">255</span>])):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[二值化修正] <span class="hljs-subst">&#123;os.path.basename(mask_path)&#125;</span> 唯一值: <span class="hljs-subst">&#123;uniq&#125;</span> -&gt; [0,255]&quot;</span>)<br>        mask = mask_bin<br><br>        <span class="hljs-comment"># 4. 保存修正后的mask</span><br>        mask.save(mask_path)<br><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[OK] <span class="hljs-subst">&#123;os.path.basename(img_path)&#125;</span> &lt;-&gt; <span class="hljs-subst">&#123;os.path.basename(mask_path)&#125;</span>  size: <span class="hljs-subst">&#123;img.size&#125;</span> mode: <span class="hljs-subst">&#123;mask.mode&#125;</span> 唯一值: <span class="hljs-subst">&#123;np.unique(np.array(mask))&#125;</span>&quot;</span>)<br><br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[ERROR] <span class="hljs-subst">&#123;os.path.basename(mask_path)&#125;</span>: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    <span class="hljs-keyword">for</span> fname <span class="hljs-keyword">in</span> os.listdir(img_dir):<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> fname.lower().endswith((<span class="hljs-string">&#x27;.jpg&#x27;</span>, <span class="hljs-string">&#x27;.jpeg&#x27;</span>, <span class="hljs-string">&#x27;.png&#x27;</span>)):<br>            <span class="hljs-keyword">continue</span><br>        img_base = fname.rsplit(<span class="hljs-string">&#x27;.&#x27;</span>, <span class="hljs-number">1</span>)[<span class="hljs-number">0</span>]<br>        mask_name = img_base + <span class="hljs-string">&#x27;_mask.png&#x27;</span><br>        img_path = os.path.join(img_dir, fname)<br>        mask_path = os.path.join(mask_dir, mask_name)<br>        <span class="hljs-keyword">if</span> os.path.exists(mask_path):<br>            fix_mask(img_path, mask_path)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[缺少mask] <span class="hljs-subst">&#123;mask_path&#125;</span>&quot;</span>)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    main()<br><br></code></pre></td></tr></table></figure><h4 id="Step-5-用-lama-cleaner-批量修复去水印（自动读取mask）"><a href="#Step-5-用-lama-cleaner-批量修复去水印（自动读取mask）" class="headerlink" title="Step 5. 用 lama-cleaner 批量修复去水印（自动读取mask）"></a>Step 5. 用 lama-cleaner 批量修复去水印（自动读取mask）</h4><p><strong>编写批处理脚本</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">src<span class="hljs-regexp">/weibo/</span>rmwatermarks/lama-cleaner.py<br></code></pre></td></tr></table></figure><blockquote><p>[!IMPORTANT]</p><p>每张图片都会用同名mask修复水印区域，输出到 image_nowm&#x2F;</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">from</span> io <span class="hljs-keyword">import</span> BytesIO<br><br><span class="hljs-comment"># 1. 配置路径</span><br>img_dir = <span class="hljs-string">&#x27;/home/zjh/src/weibo/rmwatermarks/image&#x27;</span>       <span class="hljs-comment"># 原始图片目录</span><br>mask_dir = <span class="hljs-string">&#x27;/home/zjh/src/weibo/rmwatermarks/mask&#x27;</span>       <span class="hljs-comment"># mask目录</span><br>out_dir = <span class="hljs-string">&#x27;/home/zjh/src/weibo/rmwatermarks/image_nowm/&#x27;</span> <span class="hljs-comment"># 输出目录</span><br>os.makedirs(out_dir, exist_ok=<span class="hljs-literal">True</span>)                      <span class="hljs-comment"># 创建输出目录（如果不存在）</span><br><br>MAX_SIZE = <span class="hljs-number">4096</span>  <span class="hljs-comment"># 图片最大边长，过大就自动缩放</span><br><br><span class="hljs-comment"># 2. 遍历图片文件夹</span><br><span class="hljs-keyword">for</span> fname <span class="hljs-keyword">in</span> os.listdir(img_dir):<br>    <span class="hljs-comment"># 只处理图片文件</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> fname.lower().endswith((<span class="hljs-string">&#x27;.jpg&#x27;</span>, <span class="hljs-string">&#x27;.jpeg&#x27;</span>, <span class="hljs-string">&#x27;.png&#x27;</span>)):<br>        <span class="hljs-keyword">continue</span><br><br>    img_base = fname.rsplit(<span class="hljs-string">&#x27;.&#x27;</span>, <span class="hljs-number">1</span>)[<span class="hljs-number">0</span>]<br>    mask_name = img_base + <span class="hljs-string">&#x27;_mask.png&#x27;</span><br>    mask_path = os.path.join(mask_dir, mask_name)<br>    in_path = os.path.join(img_dir, fname)<br>    out_path = os.path.join(out_dir, fname)<br><br>    <span class="hljs-comment"># mask 必须存在</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(mask_path):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;未找到mask：<span class="hljs-subst">&#123;mask_path&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">continue</span><br><br>    <span class="hljs-comment"># 3. 打开图片和mask，确保尺寸匹配</span><br>    <span class="hljs-keyword">try</span>:<br>        img = Image.<span class="hljs-built_in">open</span>(in_path)<br>        mask = Image.<span class="hljs-built_in">open</span>(mask_path)<br><br>        <span class="hljs-comment"># 缩放图片和mask到最大边长 MAX_SIZE，且保证两者同尺寸</span><br>        scale = <span class="hljs-built_in">min</span>(MAX_SIZE / img.size[<span class="hljs-number">0</span>], MAX_SIZE / img.size[<span class="hljs-number">1</span>], <span class="hljs-number">1.0</span>)<br>        new_size = (<span class="hljs-built_in">int</span>(img.size[<span class="hljs-number">0</span>] * scale), <span class="hljs-built_in">int</span>(img.size[<span class="hljs-number">1</span>] * scale))<br>        <span class="hljs-keyword">if</span> img.size != new_size:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;fname&#125;</span> 图片过大(<span class="hljs-subst">&#123;img.size&#125;</span>), 自动resize -&gt; <span class="hljs-subst">&#123;new_size&#125;</span>&quot;</span>)<br>            img = img.resize(new_size, Image.LANCZOS)<br>        <span class="hljs-keyword">if</span> mask.size != new_size:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;fname&#125;</span> mask尺寸不一致，自动resize: <span class="hljs-subst">&#123;mask.size&#125;</span> -&gt; <span class="hljs-subst">&#123;new_size&#125;</span>&quot;</span>)<br>            mask = mask.resize(new_size, Image.NEAREST)<br><br>        <span class="hljs-comment"># mask 灰度化、二值化，保证只有0/255</span><br>        <span class="hljs-keyword">if</span> mask.mode != <span class="hljs-string">&quot;L&quot;</span>:<br>            mask = mask.convert(<span class="hljs-string">&quot;L&quot;</span>)<br>        mask = mask.point(<span class="hljs-keyword">lambda</span> x: <span class="hljs-number">255</span> <span class="hljs-keyword">if</span> x &gt; <span class="hljs-number">127</span> <span class="hljs-keyword">else</span> <span class="hljs-number">0</span>, mode=<span class="hljs-string">&#x27;1&#x27;</span>).convert(<span class="hljs-string">&quot;L&quot;</span>)<br>        mask_array = np.array(mask)<br>        <span class="hljs-keyword">if</span> mask_array.<span class="hljs-built_in">max</span>() == <span class="hljs-number">0</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;fname&#125;</span> mask全黑，跳过（没有检测到水印区域）&quot;</span>)<br>            <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;图片或mask无法打开：<span class="hljs-subst">&#123;fname&#125;</span>, <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">continue</span><br><br>    <span class="hljs-comment"># 4. 构造 BytesIO，防止IO冲突</span><br>    img_bytes = BytesIO()<br>    img.save(img_bytes, <span class="hljs-built_in">format</span>=<span class="hljs-string">&#x27;PNG&#x27;</span>)<br>    img_bytes.seek(<span class="hljs-number">0</span>)<br>    mask_bytes = BytesIO()<br>    mask.save(mask_bytes, <span class="hljs-built_in">format</span>=<span class="hljs-string">&#x27;PNG&#x27;</span>)<br>    mask_bytes.seek(<span class="hljs-number">0</span>)<br><br>    <span class="hljs-comment"># 5. 构造 POST 数据</span><br>    files = &#123;<br>        <span class="hljs-string">&#x27;image&#x27;</span>: (<span class="hljs-string">&#x27;image.png&#x27;</span>, img_bytes, <span class="hljs-string">&#x27;image/png&#x27;</span>),<br>        <span class="hljs-string">&#x27;mask&#x27;</span>: (<span class="hljs-string">&#x27;mask.png&#x27;</span>, mask_bytes, <span class="hljs-string">&#x27;image/png&#x27;</span>)<br>    &#125;<br><br>    <span class="hljs-comment"># ======= 你所有的 lama-cleaner 参数都写这里 =======</span><br>    <span class="hljs-comment"># 如果要不同图片用不同参数，这里也可以灵活调整</span><br>    data = &#123;<br>        <span class="hljs-string">&quot;ldmSteps&quot;</span>: <span class="hljs-number">8</span>,<br>        <span class="hljs-string">&quot;ldmSampler&quot;</span>: <span class="hljs-string">&quot;plms&quot;</span>,<br>        <span class="hljs-string">&quot;hdStrategy&quot;</span>: <span class="hljs-string">&quot;Original&quot;</span>,<br>        <span class="hljs-string">&quot;zitsWireframe&quot;</span>: <span class="hljs-string">&quot;false&quot;</span>,<br>        <span class="hljs-string">&quot;hdStrategyCropMargin&quot;</span>: <span class="hljs-number">128</span>,<br>        <span class="hljs-string">&quot;hdStrategyCropTrigerSize&quot;</span>: <span class="hljs-number">2000</span>,<br>        <span class="hljs-string">&quot;hdStrategyResizeLimit&quot;</span>: <span class="hljs-number">2000</span>,<br>        <span class="hljs-string">&quot;prompt&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-string">&quot;negativePrompt&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-string">&quot;useCroper&quot;</span>: <span class="hljs-string">&quot;false&quot;</span>,<br>        <span class="hljs-string">&quot;croperX&quot;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;croperY&quot;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;croperHeight&quot;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;croperWidth&quot;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;sdScale&quot;</span>: <span class="hljs-number">1.0</span>,<br>        <span class="hljs-string">&quot;sdMaskBlur&quot;</span>: <span class="hljs-number">3</span>,<br>        <span class="hljs-string">&quot;sdStrength&quot;</span>: <span class="hljs-number">0.75</span>,<br>        <span class="hljs-string">&quot;sdSteps&quot;</span>: <span class="hljs-number">50</span>,<br>        <span class="hljs-string">&quot;sdGuidanceScale&quot;</span>: <span class="hljs-number">7.5</span>,<br>        <span class="hljs-string">&quot;sdSampler&quot;</span>: <span class="hljs-string">&quot;plms&quot;</span>,<br>        <span class="hljs-string">&quot;sdSeed&quot;</span>: -<span class="hljs-number">1</span>,<br>        <span class="hljs-string">&quot;sdMatchHistograms&quot;</span>: <span class="hljs-string">&quot;false&quot;</span>,<br>        <span class="hljs-string">&quot;cv2Flag&quot;</span>: <span class="hljs-string">&quot;INPAINT_NS&quot;</span>,<br>        <span class="hljs-string">&quot;cv2Radius&quot;</span>: <span class="hljs-number">3</span>,<br>        <span class="hljs-string">&quot;paintByExampleSteps&quot;</span>: <span class="hljs-number">50</span>,<br>        <span class="hljs-string">&quot;paintByExampleGuidanceScale&quot;</span>: <span class="hljs-number">7.5</span>,<br>        <span class="hljs-string">&quot;paintByExampleMaskBlur&quot;</span>: <span class="hljs-number">3</span>,<br>        <span class="hljs-string">&quot;paintByExampleSeed&quot;</span>: -<span class="hljs-number">1</span>,<br>        <span class="hljs-string">&quot;paintByExampleMatchHistograms&quot;</span>: <span class="hljs-string">&quot;false&quot;</span>,<br>        <span class="hljs-string">&quot;paintByExampleExampleImage&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-string">&quot;p2pSteps&quot;</span>: <span class="hljs-number">50</span>,<br>        <span class="hljs-string">&quot;p2pImageGuidanceScale&quot;</span>: <span class="hljs-number">1.5</span>,<br>        <span class="hljs-string">&quot;p2pGuidanceScale&quot;</span>: <span class="hljs-number">7.5</span>,<br>        <span class="hljs-string">&quot;controlnet_conditioning_scale&quot;</span>: <span class="hljs-number">1.0</span>,<br>        <span class="hljs-string">&quot;controlnet_method&quot;</span>: <span class="hljs-string">&quot;none&quot;</span>,<br>    &#125;<br><br>    <span class="hljs-comment"># 6. 发送 POST 请求，获得结果</span><br>    <span class="hljs-keyword">try</span>:<br>        response = requests.post(<br>            <span class="hljs-string">&#x27;http://127.0.0.1:8188/inpaint&#x27;</span>,<br>            files=files,<br>            data=data,<br>            timeout=<span class="hljs-number">120</span>      <span class="hljs-comment"># lama-cleaner 慢可适当调大</span><br>        )<br>        <span class="hljs-keyword">if</span> response.status_code == <span class="hljs-number">200</span>:<br>            <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(out_path, <span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> f_out:<br>                f_out.write(response.content)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;处理完成: <span class="hljs-subst">&#123;fname&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;处理失败: <span class="hljs-subst">&#123;fname&#125;</span>, 状态码: <span class="hljs-subst">&#123;response.status_code&#125;</span>, 响应: <span class="hljs-subst">&#123;response.text[:<span class="hljs-number">100</span>]&#125;</span>&quot;</span>)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;处理异常: <span class="hljs-subst">&#123;fname&#125;</span>, 错误: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br><br></code></pre></td></tr></table></figure><blockquote><p>[!IMPORTANT]</p><p><strong>首先运行</strong></p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">lama</span><span class="hljs-literal">-</span><span class="hljs-comment">cleaner</span> <span class="hljs-literal">--</span><span class="hljs-comment">model lama</span> <span class="hljs-literal">--</span><span class="hljs-comment">host 127</span><span class="hljs-string">.</span><span class="hljs-comment">0</span><span class="hljs-string">.</span><span class="hljs-comment">0</span><span class="hljs-string">.</span><span class="hljs-comment">1</span> <span class="hljs-literal">--</span><span class="hljs-comment">port 8188</span> <span class="hljs-literal">--</span><span class="hljs-comment">debug</span><br></code></pre></td></tr></table></figure><p><strong>提示如下信息就代表成功</strong></p></blockquote><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs delphi">Running <span class="hljs-keyword">on</span> http:<span class="hljs-comment">//127.0.0.1:8188</span><br>Press CTRL+C <span class="hljs-keyword">to</span> quit<br></code></pre></td></tr></table></figure><p>然后运行：<strong>python3.10 lama-cleaner.py</strong></p><p><strong>所有去掉水印的图片都保存在：&#x2F;src&#x2F;weibo&#x2F;rmwatermarks&#x2F;image_nowm&#x2F;</strong></p><hr><h3 id="以上是已有模型进行的去水印，下面是训练自己的去水印模型⬇️"><a href="#以上是已有模型进行的去水印，下面是训练自己的去水印模型⬇️" class="headerlink" title="以上是已有模型进行的去水印，下面是训练自己的去水印模型⬇️"></a>以上是已有模型进行的去水印，下面是训练自己的去水印模型⬇️</h3><h3 id="请注意自己的路径，以下是全新的路径，唯独共用一个venv"><a href="#请注意自己的路径，以下是全新的路径，唯独共用一个venv" class="headerlink" title="请注意自己的路径，以下是全新的路径，唯独共用一个venv"></a>请注意自己的路径，以下是全新的路径，唯独共用一个venv</h3><h3 id="三、训练去水印模型"><a href="#三、训练去水印模型" class="headerlink" title="三、训练去水印模型"></a>三、训练去水印模型</h3><h4 id="Step-1-前提训练模型前，需要大量手动给有水印的图片加矩形选区，这里我推荐以下两款工具"><a href="#Step-1-前提训练模型前，需要大量手动给有水印的图片加矩形选区，这里我推荐以下两款工具" class="headerlink" title="Step 1.前提训练模型前，需要大量手动给有水印的图片加矩形选区，这里我推荐以下两款工具"></a>Step 1.前提训练模型前，需要大量手动给有水印的图片加矩形选区，这里我推荐以下两款工具</h4><blockquote><p>[!IMPORTANT]</p><p><strong>labelImg本地</strong></p><p><strong><a href="https://roboflow.com/%E5%9C%A8%E7%BA%BF">https://roboflow.com/在线</a></strong></p></blockquote><p>这里我选择<strong>labelImg本地</strong>进行绘制，目前文件路径为：</p><h5 id="src-weibo-rmwatermarks："><a href="#src-weibo-rmwatermarks：" class="headerlink" title="src&#x2F;weibo&#x2F;rmwatermarks："></a>src&#x2F;weibo&#x2F;rmwatermarks：</h5><ul><li>labelImg   下载地址： <a href="https://pan.baidu.com/s/19WwEaa2PM_M_GTnMUsSZSA">https://pan.baidu.com/s/19WwEaa2PM_M_GTnMUsSZSA</a> 提取码: hui9 </li><li>trainingmodel   自行创建，我这里觉得分类好方便</li></ul><h5 id="src-weibo-rmwatermarks-trainingmodel："><a href="#src-weibo-rmwatermarks-trainingmodel：" class="headerlink" title="src&#x2F;weibo&#x2F;rmwatermarks&#x2F;trainingmodel："></a>src&#x2F;weibo&#x2F;rmwatermarks&#x2F;trainingmodel：</h5><ul><li><p>dataset   自行创建（必须）</p></li><li><p><strong>train_val.py   自行创建（代码如下）这是为了划分train和val图片，先不要运行！！！</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> shutil<br><br><span class="hljs-comment"># 1. 原始数据目录，图片和txt一一对应、都在里面</span><br>src_dir = <span class="hljs-string">&#x27;/home/zjh/src/weibo/rmwatermarks/trainingmodel/dataset/datasource&#x27;</span>  <span class="hljs-comment"># 修改为你的原始数据目录</span><br>dst_dir = <span class="hljs-string">&#x27;/home/zjh/src/weibo/rmwatermarks/trainingmodel/dataset&#x27;</span><br><br><span class="hljs-comment"># 2. 输出目录结构</span><br>images_train = os.path.join(dst_dir, <span class="hljs-string">&#x27;images&#x27;</span>, <span class="hljs-string">&#x27;train&#x27;</span>)<br>images_val = os.path.join(dst_dir, <span class="hljs-string">&#x27;images&#x27;</span>, <span class="hljs-string">&#x27;val&#x27;</span>)<br>labels_train = os.path.join(dst_dir, <span class="hljs-string">&#x27;labels&#x27;</span>, <span class="hljs-string">&#x27;train&#x27;</span>)<br>labels_val = os.path.join(dst_dir, <span class="hljs-string">&#x27;labels&#x27;</span>, <span class="hljs-string">&#x27;val&#x27;</span>)<br><span class="hljs-keyword">for</span> d <span class="hljs-keyword">in</span> [images_train, images_val, labels_train, labels_val]:<br>    os.makedirs(d, exist_ok=<span class="hljs-literal">True</span>)<br><br><span class="hljs-comment"># 3. 获取所有图片（支持jpg、jpeg、png）</span><br>img_exts = (<span class="hljs-string">&#x27;.jpg&#x27;</span>, <span class="hljs-string">&#x27;.jpeg&#x27;</span>, <span class="hljs-string">&#x27;.png&#x27;</span>)<br>imgs = [f <span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> os.listdir(src_dir) <span class="hljs-keyword">if</span> f.lower().endswith(img_exts)]<br><br>random.shuffle(imgs)   <span class="hljs-comment"># 打乱顺序</span><br>val_ratio = <span class="hljs-number">0.2</span>        <span class="hljs-comment"># 验证集比例</span><br>num_val = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">len</span>(imgs) * val_ratio)<br>val_imgs = imgs[:num_val]<br>train_imgs = imgs[num_val:]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">copy_pair</span>(<span class="hljs-params">imgs, img_dst, label_dst</span>):<br>    <span class="hljs-keyword">for</span> img <span class="hljs-keyword">in</span> imgs:<br>        base = os.path.splitext(img)[<span class="hljs-number">0</span>]<br>        img_path = os.path.join(src_dir, img)<br>        label_path = os.path.join(src_dir, base + <span class="hljs-string">&#x27;.txt&#x27;</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(label_path):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;标签文件缺失: <span class="hljs-subst">&#123;label_path&#125;</span>，跳过。&#x27;</span>)<br>            <span class="hljs-keyword">continue</span><br>        shutil.copy(img_path, os.path.join(img_dst, img))<br>        shutil.copy(label_path, os.path.join(label_dst, base + <span class="hljs-string">&#x27;.txt&#x27;</span>))<br><br>copy_pair(train_imgs, images_train, labels_train)<br>copy_pair(val_imgs, images_val, labels_val)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;划分完成，train: <span class="hljs-subst">&#123;<span class="hljs-built_in">len</span>(train_imgs)&#125;</span>，val: <span class="hljs-subst">&#123;<span class="hljs-built_in">len</span>(val_imgs)&#125;</span>&quot;</span>)<br><br></code></pre></td></tr></table></figure></li><li><p>watermark.yaml    自行创建（代码如下）</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs nix"><span class="hljs-params">path:</span> src<span class="hljs-operator">/</span>weibo<span class="hljs-operator">/</span>rmwatermarks<span class="hljs-operator">/</span>trainingmodel<span class="hljs-operator">/</span>dataset<span class="hljs-symbol">/</span><br><span class="hljs-params">train:</span> images<span class="hljs-symbol">/train</span><br><span class="hljs-params">val:</span> images<span class="hljs-symbol">/val</span><br><br><span class="hljs-params">names:</span><br>  <span class="hljs-number">0</span>: watermark<br></code></pre></td></tr></table></figure></li></ul><h5 id="src-weibo-rmwatermarks-trainingmodel-dataset："><a href="#src-weibo-rmwatermarks-trainingmodel-dataset：" class="headerlink" title="src&#x2F;weibo&#x2F;rmwatermarks&#x2F;trainingmodel&#x2F;dataset："></a>src&#x2F;weibo&#x2F;rmwatermarks&#x2F;trainingmodel&#x2F;dataset：</h5><ul><li><strong>datasource   自行创建（必须）在这里面放入要画矩形的水印图片</strong></li><li>images  自动生成</li><li>labels    自动生成</li><li>classes.txt  自动生成</li></ul><h4 id="Step-2-运行labelImg工具（可选venv环境）"><a href="#Step-2-运行labelImg工具（可选venv环境）" class="headerlink" title="Step 2.运行labelImg工具（可选venv环境）"></a>Step 2.运行labelImg工具（可选venv环境）</h4><p>安装所需依赖</p><blockquote><p>[!TIP]</p><p><strong>根据自己的系统来安装（如果不用venv环境，就在系统中安装以下命令）（venv默认已经安装PyQt5的）</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt-get install pyqt5-dev-tools<br><span class="hljs-built_in">sudo</span> pacman -S python-pyqt5<br></code></pre></td></tr></table></figure><blockquote><p>[!IMPORTANT]</p><p><strong>上面我已经放了labelImg的下载地址，解压出来cd labelImg</strong>，运行以下命令</p></blockquote><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim">pip3.<span class="hljs-number">10</span> install -r requirements/requirements-linux-<span class="hljs-keyword">python3</span>.txt<br><span class="hljs-keyword">python3</span>.<span class="hljs-number">10</span> labelImg.<span class="hljs-keyword">py</span><br></code></pre></td></tr></table></figure><p><strong>打开目录：src&#x2F;weibo&#x2F;rmwatermarks&#x2F;trainingmodel&#x2F;dataset&#x2F;images&#x2F;这里我们前面已经交代了，通过如下图片进行选区保存等</strong></p><p><img src="/img/essay/image-20250722151213314.png" alt="image-20250722151213314"></p><blockquote><p>[!IMPORTANT]</p><p>选区完成之后可以看到我们datasource下有很多图片以及txt文件</p><p>运行train_val.py将txt和图片分类开</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">python3</span>.<span class="hljs-number">10</span> train_val.<span class="hljs-keyword">py</span><br></code></pre></td></tr></table></figure><p>以下两种文件就生成了</p></blockquote><ul><li>labels  里面装着txt文件</li><li>images  里面就是画好选区的图片</li><li>datasource  这个数据源就可以删除了，也可以不删除</li></ul><h4 id="Step-3-正式编写模型（需要venv环境）"><a href="#Step-3-正式编写模型（需要venv环境）" class="headerlink" title="Step 3.正式编写模型（需要venv环境）"></a>Step 3.正式编写模型（需要venv环境）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> venv/bin/activate<br></code></pre></td></tr></table></figure><blockquote><p>[!IMPORTANT]</p><p><strong>data&#x3D;trainingmodel&#x2F;watermark.yaml根据自己的路径改</strong></p><p>**这里需要一个yolov8n.pt官方的模型，下载链接：<a href="https://pan.baidu.com/s/1fyq6qhjnkglEj4cflSDvjg">https://pan.baidu.com/s/1fyq6qhjnkglEj4cflSDvjg</a> 提取码: hui9 **</p><p><strong>把他放在和venv同目录下，也就是我们目前的src&#x2F;weibo&#x2F;rmwatermarks&#x2F;目录下</strong></p><p>运行以下命令：</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">yolo detect train <span class="hljs-attribute">data</span>=trainingmodel/watermark.yaml <span class="hljs-attribute">model</span>=yolov8n.pt <span class="hljs-attribute">epochs</span>=100 <span class="hljs-attribute">imgsz</span>=640 <span class="hljs-attribute">batch</span>=8<br></code></pre></td></tr></table></figure><p>出现以下等等信息代表成功，模型放在<strong>src&#x2F;weibo&#x2F;rmwatermarks&#x2F;runs&#x2F;detect&#x2F;train&#x2F;weights&#x2F;best.pt</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs apache"><br>      <span class="hljs-attribute">Epoch</span>    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size<br>    <span class="hljs-attribute">100</span>/<span class="hljs-number">100</span>      <span class="hljs-number">1</span>.<span class="hljs-number">19</span>G     <span class="hljs-number">0</span>.<span class="hljs-number">5884</span>     <span class="hljs-number">0</span>.<span class="hljs-number">7077</span>     <span class="hljs-number">0</span>.<span class="hljs-number">8859</span>          <span class="hljs-number">6</span>        <span class="hljs-number">640</span>: <span class="hljs-number">100</span>%|██████████| <span class="hljs-number">10</span>/<span class="hljs-number">10</span><span class="hljs-meta"> [00:00&lt;00:00, 12.34it/s]</span><br>                 <span class="hljs-attribute">Class</span>     Images  Instances      Box(P          R      mAP50  mAP50-<span class="hljs-number">95</span>): <span class="hljs-number">100</span>%|██████████| <span class="hljs-number">2</span>/<span class="hljs-number">2</span><span class="hljs-meta"> [00:00&lt;00:00, 26.77it</span><br><span class="hljs-meta">                   all         19         19      0.995          1      0.995      0.597</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">100 epochs completed in 0.028 hours.</span><br><span class="hljs-meta">Optimizer stripped from runs/detect/train/weights/last.pt, 6.2MB</span><br><span class="hljs-meta">Optimizer stripped from runs/detect/train/weights/best.pt, 6.2MB</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">Validating runs/detect/train/weights/best.pt...</span><br><span class="hljs-meta">Ultralytics 8.3.169 🚀 Python-3.10.0 torch-2.0.0+cu117 CUDA:0 (NVIDIA GeForce RTX 4070 Laptop GPU, 7781MiB)</span><br><span class="hljs-meta">Model summary (fused): 72 layers, 3,005,843 parameters, 0 gradients, 8.1 GFLOPs</span><br><span class="hljs-meta">                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 2/2 [00:00&lt;00:00, 22.66it</span><br><span class="hljs-meta">                   all         19         19      0.991          1      0.995      0.634</span><br><span class="hljs-meta">Speed: 0.1ms preprocess, 2.8ms inference, 0.0ms loss, 0.4ms postprocess per image</span><br><span class="hljs-meta">Results saved to runs/detect/train</span><br><span class="hljs-meta">💡 Learn more at https://docs.ultralytics.com/modes/train</span><br><span class="hljs-meta"></span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Arch Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Arch Linux安装Stable-Diffusion-WebUI更新版</title>
    <link href="/2025/08/03/ArchLinux%E5%AE%89%E8%A3%85Stable-Diffusion-WebUI%E6%9B%B4%E6%96%B0%E7%89%88/"/>
    <url>/2025/08/03/ArchLinux%E5%AE%89%E8%A3%85Stable-Diffusion-WebUI%E6%9B%B4%E6%96%B0%E7%89%88/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在 Arch Linux 上安装 <strong>Stable Diffusion WebUI（AUTOMATIC1111 的 sd-webui）</strong> 可以通过以下几步完成。这个教程假设你有基本的 Arch 使用经验</p><hr><h3 id="第一步：先决条件"><a href="#第一步：先决条件" class="headerlink" title="第一步：先决条件"></a>第一步：先决条件</h3><p>确保你的系统中已经安装了以下依赖项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S git ffmpeg wget unzip<br></code></pre></td></tr></table></figure><p>如果你使用 NVIDIA 显卡，还需要安装相关驱动和 CUDA：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S nvidia nvidia-utils cuda cudnn<br></code></pre></td></tr></table></figure><p>AMD 用户可跳过 CUDA，只保证有 mesa 和 rocm 相关包</p><blockquote><p>[!WARNING]</p><h4 id="CUDA-和-cuDNN-的区别："><a href="#CUDA-和-cuDNN-的区别：" class="headerlink" title="CUDA 和 cuDNN 的区别："></a>CUDA 和 cuDNN 的区别：</h4></blockquote><table><thead><tr><th>名称</th><th>全称</th><th>作用</th><th>举例</th></tr></thead><tbody><tr><td><strong>CUDA</strong></td><td>Compute Unified Device Architecture</td><td>NVIDIA 推出的 <strong>通用 GPU 加速平台</strong>，让程序能用显卡运算</td><td>PyTorch 用 CUDA 来加速</td></tr><tr><td><strong>cuDNN</strong></td><td>CUDA Deep Neural Network library</td><td>基于 CUDA 的 <strong>深度学习加速库</strong>，专门优化神经网络的计算（更快）</td><td>Stable Diffusion 用 cuDNN 提升速度</td></tr></tbody></table><p> 通俗类比：</p><ul><li><strong>CUDA &#x3D; 显卡的驱动+操作系统接口</strong>，就像是电脑的“显卡系统”</li><li><strong>cuDNN &#x3D; 深度学习专用的外挂插件</strong>，加速神经网络中的矩阵运算（比如卷积、反向传播）</li></ul><p>你可以理解为：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">Stable <span class="hljs-keyword">Diffusion </span>→ 用 PyTorch → PyTorch 用 CUDA → CUDA 用 cuDNN → 显卡疯狂加速跑图<br></code></pre></td></tr></table></figure><ul><li>nvidia → 显卡驱动</li><li>nvidia-utils → 基础工具（比如 nvidia-smi）</li><li>cuda → CUDA 工具包（带 nvcc 编译器）</li><li>cudnn → cuDNN 库（专门给 AI 加速用）</li></ul><h3 id="第二步：Python-选择"><a href="#第二步：Python-选择" class="headerlink" title="第二步：Python 选择"></a>第二步：Python 选择</h3><p>确保使用的是 Python 3.11。WebUI 不兼容 3.12</p><ol><li><p>如果不是需要手动安装：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">mkdir</span> -p ~/src &amp;&amp; cd ~/src<br><span class="hljs-attribute">wget</span> https://www.python.org/ftp/python/<span class="hljs-number">3</span>.<span class="hljs-number">11</span>.<span class="hljs-number">0</span>/Python-<span class="hljs-number">3</span>.<span class="hljs-number">11</span>.<span class="hljs-number">0</span>.tgz<br><span class="hljs-attribute">tar</span> -xzf Python-<span class="hljs-number">3</span>.<span class="hljs-number">11</span>.<span class="hljs-number">0</span>.tgz<br><span class="hljs-attribute">cd</span> Python-<span class="hljs-number">3</span>.<span class="hljs-number">11</span>.<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure></li><li><p>配置安装路径（不会覆盖系统的 python）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">./configure --prefix=<span class="hljs-variable">$HOME</span>/src/python311 --enable-optimizations<br>make -j$(<span class="hljs-built_in">nproc</span>)<br>make install<br></code></pre></td></tr></table></figure><blockquote><p>[!NOTE]</p><p>安装路径在~&#x2F;src&#x2F;python311&#x2F;bin&#x2F;python3.11</p><p>make -j &lt;你 CPU 的核心数量&gt;</p><ul><li><p>make是用于根据 Makefile 编译源码的命令（大多数 C&#x2F;C++ 项目用它来构建）</p></li><li><p>-j表示「并行编译」，加快速度。</p></li><li><p>$(nproc)是一个 Shell 命令，返回当前 CPU 的核心数。比如：8</p></li><li><p>可以将新安装的Python加入PATH变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"> vim ~/.bashrc<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$HOME</span>/src/python311/bin:<span class="hljs-variable">$PATH</span><br></code></pre></td></tr></table></figure></li></ul></blockquote></li></ol><h3 id="第三步：克隆-sd-webui-项目"><a href="#第三步：克隆-sd-webui-项目" class="headerlink" title="第三步：克隆 sd-webui 项目"></a>第三步：克隆 sd-webui 项目</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/AUTOMATIC1111/stable-diffusion-webui.git<br><span class="hljs-built_in">cd</span> stable-diffusion-webui<br></code></pre></td></tr></table></figure><h3 id="第四步：下载模型文件（必须）"><a href="#第四步：下载模型文件（必须）" class="headerlink" title="第四步：下载模型文件（必须）"></a>第四步：下载模型文件（必须）</h3><p>Stable Diffusion 的核心模型需要手动下载，比如：</p><ol><li>下载 v1.5 模型</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd models/Stable-diffusion<br>wget https:<span class="hljs-regexp">//</span>huggingface.co<span class="hljs-regexp">/runwayml/</span>stable-diffusion-v1-<span class="hljs-number">5</span><span class="hljs-regexp">/resolve/m</span>ain/v1-<span class="hljs-number">5</span>-pruned-emaonly.safetensors<br></code></pre></td></tr></table></figure><p>也可以换其他 <code>.ckpt</code> 或 <code>.safetensors</code> 模型。</p><h3 id="第五步：使用这个3-11-0版本创建虚拟环境"><a href="#第五步：使用这个3-11-0版本创建虚拟环境" class="headerlink" title="第五步：使用这个3.11.0版本创建虚拟环境"></a>第五步：使用这个3.11.0版本创建虚拟环境</h3><p>进入 stable-diffusion-webui 目录后：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">python3.11 -m venv venv<br><span class="hljs-built_in">source</span> venv/bin/activate<br></code></pre></td></tr></table></figure><h3 id="第六步：补全依赖"><a href="#第六步：补全依赖" class="headerlink" title="第六步：补全依赖"></a>第六步：补全依赖</h3><ol><li><p>先安装 CUDA 12.1 版本的 torch&#x2F;torchvision</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">pip3</span>.<span class="hljs-number">11</span> install torch==<span class="hljs-number">2</span>.<span class="hljs-number">1</span>.<span class="hljs-number">2</span>+cu121 torchvision==<span class="hljs-number">0</span>.<span class="hljs-number">16</span>.<span class="hljs-number">2</span>+cu121 --extra-index-url https://download.pytorch.org/whl/cu121<br></code></pre></td></tr></table></figure></li><li><p>修改requirements.txt</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">GitPython</span>&gt;=<span class="hljs-number">3</span>.<span class="hljs-number">1</span>.<span class="hljs-number">30</span><br><span class="hljs-attribute">Pillow</span>&gt;=<span class="hljs-number">9</span>.<span class="hljs-number">4</span>.<span class="hljs-number">0</span>,&lt;<span class="hljs-number">11</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">accelerate</span>&gt;=<span class="hljs-number">0</span>.<span class="hljs-number">18</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">blendmodes</span>&gt;=<span class="hljs-number">2022</span>.<span class="hljs-number">9</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">clean</span>-fid&gt;=<span class="hljs-number">0</span>.<span class="hljs-number">1</span>.<span class="hljs-number">35</span><br><span class="hljs-attribute">diskcache</span>&gt;=<span class="hljs-number">5</span>.<span class="hljs-number">6</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">einops</span>&gt;=<span class="hljs-number">0</span>.<span class="hljs-number">6</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">facexlib</span>&gt;=<span class="hljs-number">0</span>.<span class="hljs-number">2</span>.<span class="hljs-number">5</span><br><span class="hljs-attribute">fastapi</span>&gt;=<span class="hljs-number">0</span>.<span class="hljs-number">90</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">gradio</span>==<span class="hljs-number">3</span>.<span class="hljs-number">41</span>.<span class="hljs-number">2</span><br><span class="hljs-attribute">inflection</span>&gt;=<span class="hljs-number">0</span>.<span class="hljs-number">5</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">jsonmerge</span>&gt;=<span class="hljs-number">1</span>.<span class="hljs-number">8</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">kornia</span>&gt;=<span class="hljs-number">0</span>.<span class="hljs-number">6</span>.<span class="hljs-number">8</span><br><span class="hljs-attribute">lark</span>&gt;=<span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">5</span><br><span class="hljs-attribute">numpy</span>&gt;=<span class="hljs-number">1</span>.<span class="hljs-number">23</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">omegaconf</span>&gt;=<span class="hljs-number">2</span>.<span class="hljs-number">2</span>.<span class="hljs-number">3</span><br><span class="hljs-attribute">open</span>-clip-torch&gt;=<span class="hljs-number">2</span>.<span class="hljs-number">0</span>.<span class="hljs-number">2</span><br><span class="hljs-attribute">piexif</span>&gt;=<span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">3</span><br><span class="hljs-attribute">protobuf</span>==<span class="hljs-number">3</span>.<span class="hljs-number">20</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">psutil</span>&gt;=<span class="hljs-number">5</span>.<span class="hljs-number">9</span>.<span class="hljs-number">4</span><br><span class="hljs-attribute">pytorch_lightning</span>&gt;=<span class="hljs-number">2</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">requests</span>&gt;=<span class="hljs-number">2</span>.<span class="hljs-number">28</span>.<span class="hljs-number">2</span><br><span class="hljs-attribute">resize</span>-right&gt;=<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">2</span><br><span class="hljs-attribute">safetensors</span>&gt;=<span class="hljs-number">0</span>.<span class="hljs-number">2</span>.<span class="hljs-number">7</span><br><span class="hljs-attribute">scikit</span>-image&gt;=<span class="hljs-number">0</span>.<span class="hljs-number">19</span><br><span class="hljs-attribute">tomesd</span>&gt;=<span class="hljs-number">0</span>.<span class="hljs-number">1</span>.<span class="hljs-number">2</span><br><span class="hljs-attribute">torchdiffeq</span>&gt;=<span class="hljs-number">0</span>.<span class="hljs-number">2</span>.<span class="hljs-number">3</span><br><span class="hljs-attribute">torchsde</span>&gt;=<span class="hljs-number">0</span>.<span class="hljs-number">2</span>.<span class="hljs-number">5</span><br><span class="hljs-attribute">transformers</span>==<span class="hljs-number">4</span>.<span class="hljs-number">30</span>.<span class="hljs-number">2</span><br><span class="hljs-attribute">pillow</span>-avif-plugin==<span class="hljs-number">1</span>.<span class="hljs-number">4</span>.<span class="hljs-number">3</span><br><span class="hljs-attribute">xformers</span>==<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure></li><li><p>安装依赖</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">pip3</span>.<span class="hljs-number">11</span> install -r requirements.txt<br></code></pre></td></tr></table></figure><blockquote><p>[!NOTE]</p><p>socksio 如果你有shell代理就需要安装（可跳过）</p><p>bc 没有的话shell脚本里的浮点运算也会出错（不同系统安装也不一样，按需安装）</p></blockquote><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">pip3</span>.<span class="hljs-number">11</span> install socksio<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S bc<br><span class="hljs-built_in">sudo</span> apt install bc<br></code></pre></td></tr></table></figure></li></ol><h3 id="第七步：启动webui"><a href="#第七步：启动webui" class="headerlink" title="第七步：启动webui"></a>第七步：启动webui</h3><p>第一次运行主脚本需要下载很多依赖文件，这里需要科学上网才行</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-string">./webui.sh</span> <span class="hljs-params">--xformers</span><br></code></pre></td></tr></table></figure><blockquote><p>[!CAUTION]</p><p><strong>proxychains</strong> 是我的终端代理程序，这个需要另外设置</p><p><strong>–xformers</strong> 是启动 Stable Diffusion WebUI 的加速参数，让 WebUI 使用 xformers 这个库来提升生成速度、减少显存占用（尤其是在高分辨率&#x2F;多图场景下）</p></blockquote><p>如果使用 NVIDIA 显卡，默认会启用 CUDA。AMD 用户可加上参数：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-string">./webui.sh</span> <span class="hljs-params">--skip-torch-cuda-test</span> <span class="hljs-params">--precision</span> full <span class="hljs-params">--no-half</span><br></code></pre></td></tr></table></figure><p>所有依赖都下载完成之后，需要再次运行.&#x2F;webui.sh，但这里就不需要proxychains代理程序了</p><h3 id="第八步：访问-WebUI"><a href="#第八步：访问-WebUI" class="headerlink" title="第八步：访问 WebUI"></a>第八步：访问 WebUI</h3><p>默认监听地址是：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">http:</span><span class="hljs-comment">//127.0.0.1:7860</span><br></code></pre></td></tr></table></figure><p>你可以通过浏览器访问它</p><h3 id="第九步：退出"><a href="#第九步：退出" class="headerlink" title="第九步：退出"></a>第九步：退出</h3><ul><li>按键盘：<strong>CTRL+C</strong></li><li>输入：<strong>deactivate</strong>，即可退出venv命令</li><li>最后：<strong>cd</strong>退出整个目录</li></ul>]]></content>
    
    
    <categories>
      
      <category>Arch Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Arch Linux安装KVM</title>
    <link href="/2025/07/04/arch%E5%AE%89%E8%A3%85KVM%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    <url>/2025/07/04/arch%E5%AE%89%E8%A3%85KVM%E8%99%9A%E6%8B%9F%E6%9C%BA/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Arch安装Kvm（必备依赖）"><a href="#Arch安装Kvm（必备依赖）" class="headerlink" title="Arch安装Kvm（必备依赖）"></a>Arch安装Kvm（必备依赖）</h3><ul><li>qemu → 核心虚拟化引擎</li><li>virt-manager → GUI 管理工具</li><li>virt-viewer → 轻量显示客户端</li><li>dnsmasq → DHCP&#x2F;DNS，给虚拟机分配内网 IP</li><li>vde2 → 虚拟交换机（虚拟以太网支持）</li><li>bridge-utils → 配置 Linux 网络桥接（虚拟机和物理网络直连）</li><li>openbsd-netcat → 网络调试&#x2F;转发工具</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S qemu virt-manager virt-viewer dnsmasq vde2 bridge-utils openbsd-netcat<br></code></pre></td></tr></table></figure><blockquote><p>[!TIP]</p><p>有 5 个软件包可提供 qemu ：</p><p>软件仓库 extra：</p><blockquote><p>qemu-base、qemu-desktop、qemu-full</p></blockquote><p>软件仓库 archlinuxcn：</p><blockquote><p>qemu-git、qemu-headless-git</p></blockquote><p>输入某个数字 ( 默认&#x3D;1 ): 这里推荐：qemu-desktop（输入对应的数字即可）</p></blockquote><h2 id="开启服务"><a href="#开启服务" class="headerlink" title="开启服务"></a>开启服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">enable</span> --now libvirtd.service <br></code></pre></td></tr></table></figure><h2 id="将普通用户添加进组"><a href="#将普通用户添加进组" class="headerlink" title="将普通用户添加进组"></a>将普通用户添加进组</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> usermod -aG libvirt $(<span class="hljs-built_in">whoami</span>)<br></code></pre></td></tr></table></figure><h2 id="查看用户都在那些组"><a href="#查看用户都在那些组" class="headerlink" title="查看用户都在那些组"></a>查看用户都在那些组</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">groups</span> zjh<br></code></pre></td></tr></table></figure><h2 id="kvm安装windows11出现不满足系统要求时"><a href="#kvm安装windows11出现不满足系统要求时" class="headerlink" title="kvm安装windows11出现不满足系统要求时"></a>kvm安装windows11出现不满足系统要求时</h2><ul><li>在虚拟机中按住快捷键Shift+F10打开终端界面</li><li>输入regedit打开注册表</li><li>在HKEY_LOCAL_MACHINE\SYSTEM\Setup右击新建一个项，命名为LabConfig</li><li>在该项右击新建三个DWORD (32位) 值，分别命名为BypassTPMCheck、BypassRAMCheck、BypassSecureBootCheck，并将这三个值都设置为1</li></ul><h2 id="windows11跳过联网激活"><a href="#windows11跳过联网激活" class="headerlink" title="windows11跳过联网激活"></a>windows11跳过联网激活</h2><ul><li>在联网界面按【Shift+F10】或【Shift+Fn+F10】，弹出命令提示符窗口 </li><li>在命令提示符窗口中输入：OOBE\BYPASSNRO，敲回车电脑重启 </li><li>再次回到连接网络界面，点击“我没有Internet连接”即可 </li><li>接着点击“继续执行受限设置”即可</li><li>安装win11的时候尽量将网卡移除省得更新慢</li><li>进入win11之后将CDROM换成virtio-win，win11系统安装即可</li></ul><h2 id="当windows有时启动时出错-Requested-operation-is-not-valid-network-‘default’-is-not-active"><a href="#当windows有时启动时出错-Requested-operation-is-not-valid-network-‘default’-is-not-active" class="headerlink" title="当windows有时启动时出错: Requested operation is not valid: network ‘default’ is not active"></a>当windows有时启动时出错: Requested operation is not valid: network ‘default’ is not active</h2><blockquote><p>意思是：虚拟机尝试启动时，使用的网络（名称为 default）当前未激活</p></blockquote><h4 id="方法一：在终端中激活默认网络"><a href="#方法一：在终端中激活默认网络" class="headerlink" title="方法一：在终端中激活默认网络"></a>方法一：在终端中激活默认网络</h4><p>打开终端输入以下命令激活默认网络：</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos">sudo virsh <span class="hljs-built_in">net</span>-<span class="hljs-built_in">start</span> default<br></code></pre></td></tr></table></figure><p>设置默认网络开机自动启动（可选）：</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">sudo virsh net-autostart <span class="hljs-keyword">default</span><br></code></pre></td></tr></table></figure><p>取消自启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> virsh net-autostart --<span class="hljs-built_in">disable</span> default<br></code></pre></td></tr></table></figure><h4 id="方法二：检查-libvirtd-服务状态"><a href="#方法二：检查-libvirtd-服务状态" class="headerlink" title="方法二：检查 libvirtd 服务状态"></a>方法二：检查 libvirtd 服务状态</h4><p>有时是因为libvirtd没有正常运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl start libvirtd<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">enable</span> libvirtd<br></code></pre></td></tr></table></figure><h4 id="方法三：如果网络配置丢失（default-网络不存在）"><a href="#方法三：如果网络配置丢失（default-网络不存在）" class="headerlink" title="方法三：如果网络配置丢失（default 网络不存在）"></a>方法三：如果网络配置丢失（default 网络不存在）</h4><p>你可以重新定义 default 网络：</p><p>创建一个名为 default.xml 的配置文件，内容如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">network</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>default<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">bridge</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&#x27;virbr0&#x27;</span> <span class="hljs-attr">stp</span>=<span class="hljs-string">&#x27;on&#x27;</span> <span class="hljs-attr">delay</span>=<span class="hljs-string">&#x27;0&#x27;</span>/&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">forward</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">&#x27;nat&#x27;</span>/&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">ip</span> <span class="hljs-attr">address</span>=<span class="hljs-string">&#x27;192.168.122.1&#x27;</span> <span class="hljs-attr">netmask</span>=<span class="hljs-string">&#x27;255.255.255.0&#x27;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dhcp</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">range</span> <span class="hljs-attr">start</span>=<span class="hljs-string">&#x27;192.168.122.2&#x27;</span> <span class="hljs-attr">end</span>=<span class="hljs-string">&#x27;192.168.122.254&#x27;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dhcp</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">ip</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">network</span>&gt;</span><br></code></pre></td></tr></table></figure><p>然后导入并启动它：</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">sudo virsh net-<span class="hljs-keyword">define</span> <span class="hljs-keyword">default</span>.xml<br></code></pre></td></tr></table></figure><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos">sudo virsh <span class="hljs-built_in">net</span>-<span class="hljs-built_in">start</span> default<br></code></pre></td></tr></table></figure><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">sudo virsh net-autostart <span class="hljs-keyword">default</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Arch Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Arch Linux安装Fcitx5+万象拼音</title>
    <link href="/2025/07/03/%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEfcitx5/"/>
    <url>/2025/07/03/%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEfcitx5/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="arch安装Fcitx5"><a href="#arch安装Fcitx5" class="headerlink" title="arch安装Fcitx5"></a>arch安装Fcitx5</h1><h4 id="安装fcitx5-im此包组提供fcitx5本体以及fcitx5-qt、fcitx5-gtk、fcitx5-configtool等"><a href="#安装fcitx5-im此包组提供fcitx5本体以及fcitx5-qt、fcitx5-gtk、fcitx5-configtool等" class="headerlink" title="安装fcitx5-im此包组提供fcitx5本体以及fcitx5-qt、fcitx5-gtk、fcitx5-configtool等"></a>安装fcitx5-im此包组提供fcitx5本体以及fcitx5-qt、fcitx5-gtk、fcitx5-configtool等</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S fcitx5-im<br></code></pre></td></tr></table></figure><h4 id="安装词汇fcitx5-pinyin-zhwiki包，是由felixonmars-根据中文维基百科创建的词库。适用于-拼音输入法"><a href="#安装词汇fcitx5-pinyin-zhwiki包，是由felixonmars-根据中文维基百科创建的词库。适用于-拼音输入法" class="headerlink" title="安装词汇fcitx5-pinyin-zhwiki包，是由felixonmars 根据中文维基百科创建的词库。适用于 拼音输入法"></a>安装词汇fcitx5-pinyin-zhwiki包，是由felixonmars 根据中文维基百科创建的词库。适用于 拼音输入法</h4><h4 id="安装主题fcitx5-material-color包，提供了类似微软拼音的外观"><a href="#安装主题fcitx5-material-color包，提供了类似微软拼音的外观" class="headerlink" title="安装主题fcitx5-material-color包，提供了类似微软拼音的外观"></a>安装主题fcitx5-material-color包，提供了类似微软拼音的外观</h4><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">sudo pacman -S fcitx5-<span class="hljs-built_in">chinese</span> fcitx5-pinyin-zhwiki fcitx5-material-<span class="hljs-built_in">color</span><br></code></pre></td></tr></table></figure><h4 id="编辑-etc-environment-并添加以下几行，然后重新登录"><a href="#编辑-etc-environment-并添加以下几行，然后重新登录" class="headerlink" title="编辑 &#x2F;etc&#x2F;environment 并添加以下几行，然后重新登录"></a>编辑 &#x2F;etc&#x2F;environment 并添加以下几行，然后重新登录</h4><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">GTK_IM_MODULE</span>=fcitx5<br><span class="hljs-attr">QT_IM_MODULE</span>=fcitx5<br><span class="hljs-attr">XMODIFIERS</span>=@im=fcitx5<br><span class="hljs-attr">SDL_IM_MODULE</span>=fcitx5<br><span class="hljs-attr">INPUT_METHOD</span>=fcitx5<br><span class="hljs-attr">GLFW_IM_MODULE</span>=fcitx5<br></code></pre></td></tr></table></figure><h4 id="添加fcitx5主题"><a href="#添加fcitx5主题" class="headerlink" title="添加fcitx5主题"></a>添加fcitx5主题</h4><blockquote><p>将主题放在如下目录中，设置主题前往 Fcitx5设置 -&gt; 配置附加组件 -&gt; 经典用户界面 -&gt; 主题 </p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/fcitx5/</span>themes/<br></code></pre></td></tr></table></figure><p>重启即可</p><h1 id="万象拼音使用配置（需完成上面的配置）"><a href="#万象拼音使用配置（需完成上面的配置）" class="headerlink" title="万象拼音使用配置（需完成上面的配置）"></a>万象拼音使用配置（需完成上面的配置）</h1><p>安装fcitx5-rime等依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S librime fcitx5-rime <br></code></pre></td></tr></table></figure><p>在GitHub中下载<a href="https://github.com/amzxyz/rime_wanxiang%E7%A8%8B%E5%BA%8F%E5%8C%85%E3%80%82%E5%B0%86%E5%85%B6%E6%94%BE%E5%9C%A8%E5%A6%82%E4%B8%8B%E8%B7%AF%E5%BE%84">https://github.com/amzxyz/rime_wanxiang程序包。将其放在如下路径</a></p><blockquote><p>[!TIP]</p><p>如果路径中有其他文件，将其删除</p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/home/</span>zjh<span class="hljs-regexp">/.local/</span>share<span class="hljs-regexp">/fcitx5/</span>rime/<br></code></pre></td></tr></table></figure><blockquote><p>[!TIP]</p><p>dicts存放着词汇模型</p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/home/</span>zjh<span class="hljs-regexp">/.local/</span>share<span class="hljs-regexp">/fcitx5/</span>rime<span class="hljs-regexp">/dicts/</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Arch Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>代理软件配置</title>
    <link href="/2025/06/02/arch%E4%BB%A3%E7%90%86%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE/"/>
    <url>/2025/06/02/arch%E4%BB%A3%E7%90%86%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>适用于大多数 Linux 系统，Arch、Debian、Ubuntu 都可以参考，这里只做简单配置，不设置静态代理、系统代理、shell代理等等</p><h1 id="V2ray"><a href="#V2ray" class="headerlink" title="V2ray"></a>V2ray</h1><h3 id="1-下载-v2ray-最新版本"><a href="#1-下载-v2ray-最新版本" class="headerlink" title="1. 下载 v2ray 最新版本"></a>1. 下载 v2ray 最新版本</h3><p>去官网下载 v2ray-core 的压缩包，比如最新版一般是<strong>v2ray-linux-64.zip</strong>，也可以用命令直接下载</p><p><strong>获取最新版下载链接：</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/v2fly/</span>v2ray-core<span class="hljs-regexp">/releases/</span>latest<span class="hljs-regexp">/download/</span>v2ray-linux-<span class="hljs-number">64</span>.zip<br></code></pre></td></tr></table></figure><h3 id="2-解压并整理文件"><a href="#2-解压并整理文件" class="headerlink" title="2. 解压并整理文件"></a>2. 解压并整理文件</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">unzip</span> v2ray-linux-<span class="hljs-number">64</span>.zip<br><span class="hljs-attribute">cd</span> v2ray-linux-<span class="hljs-number">64</span><br></code></pre></td></tr></table></figure><blockquote><p>[!NOTE]</p><p>建议移动到一个标准目录，比如 &#x2F;usr&#x2F;local&#x2F;v2ray或者&#x2F;opt&#x2F;</p><p>这里我以&#x2F;opt&#x2F;为主</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">mv</span> <span class="hljs-variable">$HOME</span>/Downloads/v2ray-linux-64 /opt/v2ray/<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">mv</span> ~/Downloads/v2ray-linux-64 /opt/v2ray/<br></code></pre></td></tr></table></figure><p><strong>以上两条命令都可以移动文件并且改名</strong></p><h3 id="3-添加执行权限"><a href="#3-添加执行权限" class="headerlink" title="3. 添加执行权限"></a>3. 添加执行权限</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /opt/v2ray<br><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">chmod</span> +x v2ray v2ctl<br></code></pre></td></tr></table></figure><blockquote><p>[!NOTE]</p><p>在最新版中可能没有v2ctl文件，这里可以不管</p></blockquote><h3 id="4-设置配置文件"><a href="#4-设置配置文件" class="headerlink" title="4. 设置配置文件"></a>4. 设置配置文件</h3><blockquote><p>[!TIP]</p><p><strong>由于我的我放的地方是opt下导致自带的config.json文件和v2ray同级无法使用，这里需要改一下位置</strong></p><p>以下命令意思是在v2ray文件夹下创建一个config的文件夹，并将官方的config.json文件移动进去</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">mkdir</span> /opt/v2ray/config<br><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">mv</span> /opt/v2ray/config.json /opt/v2ray/config/<br></code></pre></td></tr></table></figure><h3 id="5-修改配置文件"><a href="#5-修改配置文件" class="headerlink" title="5. 修改配置文件"></a>5. 修改配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> vim opt/v2ray/config/config.json<br></code></pre></td></tr></table></figure><blockquote><p>[!CAUTION]</p><p>这里我使用trojan的方式进行代理</p><p>如果你跟我一样需要改：<strong>服务器地址、服务器端口、Trojan 密码、设置 SNI（Server Name Indication）、监听的端口</strong>等等</p></blockquote><p>模板一：未注释版（推荐）</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;log&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;loglevel&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;debug&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;access&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/var/log/v2ray/access.log&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;error&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/var/log/v2ray/error.log&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;inbounds&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">9911</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;listen&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;127.0.0.1&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;socks&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;auth&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;noauth&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;udp&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;sniffing&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;enabled&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;destOverride&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>          <span class="hljs-string">&quot;http&quot;</span><span class="hljs-punctuation">,</span><br>          <span class="hljs-string">&quot;tls&quot;</span><br>        <span class="hljs-punctuation">]</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;outbounds&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;trojan&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;servers&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>          <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;202.000.33.136&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">23245</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;password&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;27382&quot;</span><br>          <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">]</span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;streamSettings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;network&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;tcp&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;security&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;tls&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;tlsSettings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>          <span class="hljs-attr">&quot;serverName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;cdnj60279.uu0009.com&quot;</span><span class="hljs-punctuation">,</span><br>          <span class="hljs-attr">&quot;allowInsecure&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><br>        <span class="hljs-punctuation">&#125;</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;freedom&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;tag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;direct&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;dns&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;servers&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https+local://dns.google/dns-query&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;domains&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>          <span class="hljs-string">&quot;geosite:geolocation-!cn&quot;</span><br>        <span class="hljs-punctuation">]</span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https+local://cloudflare-dns.com/dns-query&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;domains&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>          <span class="hljs-string">&quot;geosite:geolocation-!cn&quot;</span><br>        <span class="hljs-punctuation">]</span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;114.114.114.114&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;domains&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>          <span class="hljs-string">&quot;geosite:cn&quot;</span><br>        <span class="hljs-punctuation">]</span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-string">&quot;8.8.8.8&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-string">&quot;1.1.1.1&quot;</span><br>    <span class="hljs-punctuation">]</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;routing&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;domainStrategy&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;UseIP&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;rules&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;field&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;domain&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>          <span class="hljs-string">&quot;geosite:cn&quot;</span><br>        <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;outboundTag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;direct&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;field&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;ip&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>          <span class="hljs-string">&quot;geoip:cn&quot;</span><span class="hljs-punctuation">,</span><br>          <span class="hljs-string">&quot;geoip:private&quot;</span><br>        <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;outboundTag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;direct&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;field&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;ip&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>          <span class="hljs-string">&quot;geoip:!cn&quot;</span><br>        <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;outboundTag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;trojan-out&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;field&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;domain&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>          <span class="hljs-string">&quot;geosite:geolocation-!cn&quot;</span><br>        <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;outboundTag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;trojan-out&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">]</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br><br></code></pre></td></tr></table></figure><p>模板二：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;log&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-comment">//需要日志设置（默认关闭，需要打开）</span><br>    <span class="hljs-comment">//&quot;access&quot;: &quot;/var/log/v2ray/access.log&quot;,    // 访问日志文件路径</span><br>    <span class="hljs-comment">//&quot;error&quot;: &quot;/var/log/v2ray/error.log&quot;,      // 错误日志文件路径</span><br>    <span class="hljs-comment">// 设置日志级别，默认日志记录到 stdout</span><br>    <span class="hljs-comment">// 可选值：debug, info, warning, error, none</span><br>    <span class="hljs-attr">&quot;loglevel&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;warning&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br><br>  <span class="hljs-comment">// 入站配置：V2Ray 接受客户端请求的配置</span><br>  <span class="hljs-attr">&quot;inbounds&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-comment">// 监听的端口，客户端通过这个端口与 V2Ray 通信</span><br>    <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">9911</span><span class="hljs-punctuation">,</span><br><br>    <span class="hljs-comment">// 监听的 IP 地址，127.0.0.1 表示仅本机可以访问，改为 &quot;0.0.0.0&quot; 可以让所有网络接口都能连接</span><br>    <span class="hljs-attr">&quot;listen&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;127.0.0.1&quot;</span><span class="hljs-punctuation">,</span><br><br>    <span class="hljs-comment">// 此连接的标签，用于路由匹配</span><br>    <span class="hljs-attr">&quot;tag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;socks-inbound&quot;</span><span class="hljs-punctuation">,</span><br><br>    <span class="hljs-comment">// 协议，指定客户端使用的协议类型</span><br>    <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;socks&quot;</span><span class="hljs-punctuation">,</span><br><br>    <span class="hljs-comment">// 配置 SOCKS 代理的具体设置</span><br>    <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-comment">// auth：设置认证方式，noauth 表示无需认证</span><br>      <span class="hljs-attr">&quot;auth&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;noauth&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-comment">// udp：是否启用 UDP 代理，false 表示禁用</span><br>      <span class="hljs-attr">&quot;udp&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><br>      <span class="hljs-comment">// 监听的 IP 地址，设置为 &quot;127.0.0.1&quot; 仅接受本地请求</span><br>      <span class="hljs-attr">&quot;ip&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;127.0.0.1&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br><br>    <span class="hljs-comment">// 启用 sniffing 功能，检测传输协议</span><br>    <span class="hljs-attr">&quot;sniffing&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;enabled&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>      <span class="hljs-comment">// sniffing 会根据传输协议来判断目标域名</span><br>      <span class="hljs-attr">&quot;destOverride&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;http&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;tls&quot;</span><span class="hljs-punctuation">]</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br><br>  <span class="hljs-comment">// 出站配置：V2Ray 发送请求到外部的配置</span><br>  <span class="hljs-attr">&quot;outbounds&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-comment">// 使用 Trojan 协议作为外部连接的协议</span><br>    <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;trojan&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-comment">// 服务器列表，配置 Trojan 节点的相关信息</span><br>      <span class="hljs-attr">&quot;servers&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>        <span class="hljs-punctuation">&#123;</span><br>          <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;202.000.33.136&quot;</span><span class="hljs-punctuation">,</span>  <span class="hljs-comment">// 服务器地址</span><br>          <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">23245</span><span class="hljs-punctuation">,</span>  <span class="hljs-comment">// 服务器端口</span><br>          <span class="hljs-attr">&quot;password&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;27382&quot;</span>  <span class="hljs-comment">// Trojan 密码</span><br>        <span class="hljs-punctuation">&#125;</span><br>      <span class="hljs-punctuation">]</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-comment">// 配置传输层协议，使用 TCP 协议，开启 TLS 加密</span><br>    <span class="hljs-attr">&quot;streamSettings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;network&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;tcp&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;security&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;tls&quot;</span><span class="hljs-punctuation">,</span>  <span class="hljs-comment">// 使用 TLS 加密</span><br>      <span class="hljs-attr">&quot;tlsSettings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;serverName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;cdnj60279.uu0009.com&quot;</span><span class="hljs-punctuation">,</span>  <span class="hljs-comment">// 设置 SNI（Server Name Indication）</span><br>        <span class="hljs-attr">&quot;allowInsecure&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span>  <span class="hljs-comment">// 允许不安全的证书</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;tag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;trojan-outbound&quot;</span>  <span class="hljs-comment">// 设置标签，用于路由匹配</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-comment">// 默认的自由出口，不通过代理</span><br>    <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;freedom&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;tag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;direct&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-comment">// 用于屏蔽无效的连接或不需要的流量</span><br>    <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;blackhole&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;tag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;blocked&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br><br>  <span class="hljs-comment">// 路由设置：如何选择哪个出站代理</span><br>  <span class="hljs-attr">&quot;routing&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-comment">// 策略：域名或 IP 策略</span><br>    <span class="hljs-attr">&quot;domainStrategy&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;IPOnDemand&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;rules&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-comment">// 阻止访问私有 IP 地址（例如局域网地址）</span><br>        <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;field&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;ip&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;geoip:private&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;outboundTag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;blocked&quot;</span>  <span class="hljs-comment">// 使用“blocked”出站标签，丢弃连接</span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-comment">// 阻止访问广告域名</span><br>        <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;field&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;domain&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;geosite:category-ads&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;outboundTag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;blocked&quot;</span>  <span class="hljs-comment">// 使用“blocked”出站标签，丢弃连接</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">]</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br><br>  <span class="hljs-comment">// DNS 配置：配置 DNS 解析</span><br>  <span class="hljs-attr">&quot;dns&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-comment">// 静态域名映射，可以防止 DNS 污染</span><br>    <span class="hljs-attr">&quot;hosts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;domain:v2ray.com&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;www.vicemc.net&quot;</span><span class="hljs-punctuation">,</span>  <span class="hljs-comment">// 强制 v2ray.com 使用替代的 IP</span><br>      <span class="hljs-attr">&quot;domain:github.io&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;pages.github.com&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;domain:wikipedia.org&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;www.wikimedia.org&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;domain:shadowsocks.org&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;electronicsrealm.com&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-comment">// DNS 服务器列表，按照顺序查询</span><br>    <span class="hljs-attr">&quot;servers&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>      <span class="hljs-string">&quot;1.1.1.1&quot;</span><span class="hljs-punctuation">,</span>  <span class="hljs-comment">// Cloudflare DNS</span><br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;114.114.114.114&quot;</span><span class="hljs-punctuation">,</span>  <span class="hljs-comment">// 中国的公共 DNS</span><br>        <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">53</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-comment">// 针对特定域名使用此 DNS 服务器</span><br>        <span class="hljs-attr">&quot;domains&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;geosite:cn&quot;</span><span class="hljs-punctuation">]</span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-string">&quot;8.8.8.8&quot;</span><span class="hljs-punctuation">,</span>  <span class="hljs-comment">// Google DNS</span><br>      <span class="hljs-string">&quot;localhost&quot;</span>  <span class="hljs-comment">// 本地 DNS</span><br>    <span class="hljs-punctuation">]</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br><br>  <span class="hljs-comment">// 策略设置：用于控制连接的行为</span><br>  <span class="hljs-attr">&quot;policy&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;levels&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;0&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-comment">// 控制每个用户的上传和下载流量</span><br>        <span class="hljs-attr">&quot;uplinkOnly&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;downlinkOnly&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;system&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-comment">// 控制是否记录流量统计</span><br>      <span class="hljs-attr">&quot;statsInboundUplink&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;statsInboundDownlink&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;statsOutboundUplink&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;statsOutboundDownlink&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br><br>  <span class="hljs-comment">// 其他配置（可以扩展）</span><br>  <span class="hljs-attr">&quot;other&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br><br></code></pre></td></tr></table></figure><p>模板三：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;log&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;loglevel&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;debug&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-comment">//&quot;access&quot;: &quot;/var/log/v2ray/access.log&quot;,    // 访问日志文件路径</span><br>    <span class="hljs-comment">//&quot;error&quot;: &quot;/var/log/v2ray/error.log&quot;,      // 错误日志文件路径</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;inbounds&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">9900</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;listen&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;127.0.0.1&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;socks&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;auth&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;noauth&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;udp&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;sniffing&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;enabled&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;destOverride&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;http&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;tls&quot;</span><span class="hljs-punctuation">]</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;outbounds&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;trojan&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;servers&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>          <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;202.000.33.136&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">23245</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;password&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;27382&quot;</span><br>          <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">]</span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;streamSettings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;network&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;tcp&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;security&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;tls&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;tlsSettings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>          <span class="hljs-attr">&quot;serverName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;cdnj60279.uu0009.com&quot;</span><span class="hljs-punctuation">,</span><br>          <span class="hljs-attr">&quot;allowInsecure&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><br>        <span class="hljs-punctuation">&#125;</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br><br></code></pre></td></tr></table></figure><h3 id="6-手动启动-v2ray测试"><a href="#6-手动启动-v2ray测试" class="headerlink" title="6. 手动启动 v2ray测试"></a>6. 手动启动 v2ray测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /opt/v2ray<br><span class="hljs-built_in">sudo</span> v2ray run -config /config.json<br></code></pre></td></tr></table></figure><p>如果能正常启动，说明没问题</p><h3 id="7-（推荐）配置-Systemd-服务，实现开机自启"><a href="#7-（推荐）配置-Systemd-服务，实现开机自启" class="headerlink" title="7. （推荐）配置 Systemd 服务，实现开机自启"></a>7. （推荐）配置 Systemd 服务，实现开机自启</h3><p><strong>最新版已经有service文件，路径为：&#x2F;opt&#x2F;v2ray&#x2F;systemd&#x2F;system&#x2F;v2ray.service&amp;&amp;v2ray@.service这两个文件</strong></p><p>如果没有以上文件是需要自己创建，如果有也是要修改的，所以不管有没有都是要编辑的</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vim</span> /<span class="hljs-keyword">opt</span>/v2ray/systemd/<span class="hljs-built_in">system</span>/v2ray.service<br></code></pre></td></tr></table></figure><p><strong>键入：</strong></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Unit]</span><br><span class="hljs-attr">Description</span>=V2Ray Service<br><span class="hljs-attr">Documentation</span>=https://www.v2fly.org/<br><span class="hljs-attr">After</span>=network.target nss-lookup.target<br><br><span class="hljs-section">[Service]</span><br><span class="hljs-attr">User</span>=nobody<br><span class="hljs-attr">CapabilityBoundingSet</span>=CAP_NET_ADMIN CAP_NET_BIND_SERVICE<br><span class="hljs-attr">AmbientCapabilities</span>=CAP_NET_ADMIN CAP_NET_BIND_SERVICE<br><span class="hljs-attr">NoNewPrivileges</span>=<span class="hljs-literal">true</span><br><span class="hljs-attr">ExecStart</span>=/opt/v2ray/v2ray run -config /opt/v2ray/config/config.json<br><span class="hljs-attr">Restart</span>=<span class="hljs-literal">on</span>-failure<br><span class="hljs-attr">RestartPreventExitStatus</span>=<span class="hljs-number">23</span><br><br><span class="hljs-section">[Install]</span><br><span class="hljs-attr">WantedBy</span>=multi-user.target<br><br></code></pre></td></tr></table></figure><p>保存并退出</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vim</span> /<span class="hljs-keyword">opt</span>/v2ray/systemd/<span class="hljs-built_in">system</span>/v2ray@.service<br></code></pre></td></tr></table></figure><p><strong>键入：</strong></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Unit]</span><br><span class="hljs-attr">Description</span>=V2Ray Service<br><span class="hljs-attr">Documentation</span>=https://www.v2fly.org/<br><span class="hljs-attr">After</span>=network.target nss-lookup.target<br><br><span class="hljs-section">[Service]</span><br><span class="hljs-attr">User</span>=nobody<br><span class="hljs-attr">CapabilityBoundingSet</span>=CAP_NET_ADMIN CAP_NET_BIND_SERVICE<br><span class="hljs-attr">AmbientCapabilities</span>=CAP_NET_ADMIN CAP_NET_BIND_SERVICE<br><span class="hljs-attr">NoNewPrivileges</span>=<span class="hljs-literal">true</span><br><span class="hljs-attr">ExecStart</span>=/opt/v2ray/v2ray run -config /opt/v2ray/config/%i.json<br><span class="hljs-attr">Restart</span>=<span class="hljs-literal">on</span>-failure<br><span class="hljs-attr">RestartPreventExitStatus</span>=<span class="hljs-number">23</span><br><br><span class="hljs-section">[Install]</span><br><span class="hljs-attr">WantedBy</span>=multi-user.target<br><br></code></pre></td></tr></table></figure><p>保存并退出</p><blockquote><p>[!IMPORTANT]</p><p>将以上两文件拷贝到系统中</p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo <span class="hljs-regexp">/opt/</span>v2ray<span class="hljs-regexp">/systemd/</span>system<span class="hljs-regexp">/*.service /u</span>sr<span class="hljs-regexp">/lib/</span>systemd<span class="hljs-regexp">/system/</span><br></code></pre></td></tr></table></figure><p><strong>重新加载 systemd 配置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl daemon-reload<br></code></pre></td></tr></table></figure><p><strong>启动服务并设置开机自启</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">enable</span> --now v2ray.service<br></code></pre></td></tr></table></figure><h3 id="8-检查状态和日志"><a href="#8-检查状态和日志" class="headerlink" title="8. 检查状态和日志"></a>8. 检查状态和日志</h3><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs smali">sudo<span class="hljs-keyword"> system</span>ctl status v2ray<br>sudo journalctl -u v2ray -f<br></code></pre></td></tr></table></figure><h3 id="9-配置客户端代理（本机）"><a href="#9-配置客户端代理（本机）" class="headerlink" title="9. 配置客户端代理（本机）"></a>9. 配置客户端代理（本机）</h3><p><strong>v2ray 默认监听 1080 端口，上面的config.json文件端口设置的是9911，设置浏览器&#x2F;系统的 SOCKS5 代理到 127.0.0.1:端口号，即可</strong></p><h1 id="Trojan"><a href="#Trojan" class="headerlink" title="Trojan"></a>Trojan</h1><blockquote><p>[!NOTE]</p><p><strong>这里我们依旧把下载好的文件放在opt下面</strong></p><p><strong>下载Trojan客户端</strong></p></blockquote><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">wget</span> https://github.com/trojan-gfw/trojan/releases/download/v1.<span class="hljs-number">15</span>.<span class="hljs-number">1</span>/trojan-<span class="hljs-number">1</span>.<span class="hljs-number">15</span>.<span class="hljs-number">1</span>-linux-amd64.tar.xz<br></code></pre></td></tr></table></figure><p><strong>解压Trojan文件</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tar</span> xvf trojan-<span class="hljs-number">1</span>.<span class="hljs-number">15</span>.<span class="hljs-number">1</span>-linux-amd64.tar.xz<br><span class="hljs-attribute">cd</span> trojan<br></code></pre></td></tr></table></figure><p><strong>编辑配置文件</strong></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">sudo vim config.json<br></code></pre></td></tr></table></figure><p><strong>完整的json文件内容</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;run_type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;client&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;local_addr&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;127.0.0.1&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;local_port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1080</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;remote_addr&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;219.22.49.201&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;remote_port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">22201</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;password&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>        <span class="hljs-string">&quot;123456&quot;</span><br>    <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;log_level&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;ssl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;sni&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;jpo123.ovod.me&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;verify&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;verify_hostname&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;cert&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;key&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/path/to/private.key&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;key_password&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;cipher&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;cipher_tls13&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;prefer_server_cipher&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;alpn&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>            <span class="hljs-string">&quot;http/1.1&quot;</span><br>        <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;alpn_port_override&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;h2&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">81</span><br>        <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;reuse_session&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;session_ticket&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;session_timeout&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">600</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;plain_http_response&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;curves&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;dhparam&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;tcp&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;prefer_ipv4&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;no_delay&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;keep_alive&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;reuse_port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;fast_open&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;fast_open_qlen&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">20</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;mysql&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;enabled&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;server_addr&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;127.0.0.1&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;server_port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">3306</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;database&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;trojan&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;username&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;trojan&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;password&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;key&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;cert&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;ca&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br><br></code></pre></td></tr></table></figure><blockquote><p>[!NOTE]</p><p><strong>解释内容（可跳过）</strong></p><p>run_type 为运行模式，指定填为 “client”</p><p>local_port 为本地端口，如 1080</p><p>remote_addr 为远程服务器地址，填服务器IP，如 “219.22.49.201”</p><p>remote_port 为远程服务器端口，如 22201</p><p>password 修改为 [“123456”]</p><p><strong>示例如下</strong></p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;run_type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;client&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;local_addr&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;0.0.0.0&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;local_port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1080</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;remote_addr&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;219.22.49.201&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;remote_port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">22201</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;password&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;123456&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br></code></pre></td></tr></table></figure><blockquote><p>[!NOTE]</p><p>ssl中的 sni 为主机SNI名，如 “jpo123.ovod.me”，对应节点内容里的”服务器SNI”</p><p>ssl中的 verify 值修改为 false （如果配置文件中没有，则添加这个配置）</p><p>ssl中的 verify_hostname 值修改为 false （如果配置文件中没有，则添加这个配置）</p><p>ssl中的 cert 修改为 “” （改成空的）</p><p><strong>示例如下</strong></p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;sni&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;jpo123.ovod.me&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;verify&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;verify_hostname&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;cert&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br></code></pre></td></tr></table></figure><p>保存配置文件</p><h3 id="创建trojan-service文件"><a href="#创建trojan-service文件" class="headerlink" title="创建trojan.service文件"></a>创建trojan.service文件</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo vim <span class="hljs-regexp">/usr/</span>lib<span class="hljs-regexp">/systemd/</span>system/trojan.service<br></code></pre></td></tr></table></figure><p><strong>键入</strong></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Unit]</span><br><span class="hljs-attr">Description</span>=trojan<br><span class="hljs-attr">After</span>=network.target<br><br><span class="hljs-section">[Service]</span><br><span class="hljs-attr">Type</span>=simple<br><span class="hljs-attr">PIDFile</span>=/opt/trojan/trojan.pid<br><span class="hljs-attr">ExecStart</span>=/opt/trojan/trojan -c /opt/trojan/config.json -l /opt/trojan/trojan.log<br><span class="hljs-attr">ExecReload</span>=/bin/kill -HUP \<span class="hljs-variable">$MAINPID</span><br><span class="hljs-attr">Restart</span>=<span class="hljs-literal">on</span>-failure<br><span class="hljs-attr">RestartSec</span>=<span class="hljs-number">1</span>s<br><br><span class="hljs-section">[Install]</span><br><span class="hljs-attr">WantedBy</span>=multi-user.target<br></code></pre></td></tr></table></figure><h3 id="启动Trojan并设置开机自启"><a href="#启动Trojan并设置开机自启" class="headerlink" title="启动Trojan并设置开机自启"></a>启动Trojan并设置开机自启</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">enable</span> --now trojan.service<br></code></pre></td></tr></table></figure><p><strong>检查是否启动成功</strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">ps</span> aux | <span class="hljs-keyword">grep</span> trojan | <span class="hljs-keyword">grep</span> -v <span class="hljs-keyword">grep</span><br></code></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">cat</span> /<span class="hljs-keyword">opt</span>/trojan/trojan.<span class="hljs-built_in">log</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Arch Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Arch Linux安装（辉少特制）</title>
    <link href="/2025/06/01/Arch%20Linux%E4%B8%AD%E6%96%87%E7%BB%B4%E5%9F%BA/"/>
    <url>/2025/06/01/Arch%20Linux%E4%B8%AD%E6%96%87%E7%BB%B4%E5%9F%BA/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ArchLinux-Installation"><a href="#ArchLinux-Installation" class="headerlink" title="ArchLinux Installation"></a>ArchLinux Installation</h1><h2 id="1-连接到互联网"><a href="#1-连接到互联网" class="headerlink" title="1.连接到互联网"></a>1.连接到互联网</h2><h4 id="1-1-首先，确定自己电脑有没有网卡，如果电脑没有网卡，以下（1-0-1-6）步骤没有用的，直接连网线即可，安卓USB共享也可以，使用rfkill命令确认-Wi-Fi-设备未被屏蔽，如果不知道你的网络设备名称，请列出所有-WiFi-设备："><a href="#1-1-首先，确定自己电脑有没有网卡，如果电脑没有网卡，以下（1-0-1-6）步骤没有用的，直接连网线即可，安卓USB共享也可以，使用rfkill命令确认-Wi-Fi-设备未被屏蔽，如果不知道你的网络设备名称，请列出所有-WiFi-设备：" class="headerlink" title="1.1 首先，确定自己电脑有没有网卡，如果电脑没有网卡，以下（1.0-1.6）步骤没有用的，直接连网线即可，安卓USB共享也可以，使用rfkill命令确认 Wi-Fi 设备未被屏蔽，如果不知道你的网络设备名称，请列出所有 WiFi 设备："></a>1.1 首先，确定自己电脑有没有网卡，如果电脑没有网卡，以下（1.0-1.6）步骤没有用的，直接连网线即可，安卓USB共享也可以，使用rfkill命令确认 Wi-Fi 设备未被屏蔽，如果不知道你的网络设备名称，请列出所有 WiFi 设备：</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">iwctl</span><br></code></pre></td></tr></table></figure><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">device list</span><br></code></pre></td></tr></table></figure><blockquote><p>[!IMPORTANT]</p><p>device list（不管是笔记本和台式电脑都要有网卡才能被检测到，是否被屏蔽，没有则跳过1.2步，有则需要开启）</p></blockquote><h4 id="1-2-如果设备或其相应的适配器已关闭，请将其打开（可跳过）"><a href="#1-2-如果设备或其相应的适配器已关闭，请将其打开（可跳过）" class="headerlink" title="1.2 如果设备或其相应的适配器已关闭，请将其打开（可跳过）"></a>1.2 如果设备或其相应的适配器已关闭，请将其打开（可跳过）</h4><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">device</span> <span class="hljs-string">name</span> <span class="hljs-built_in">set-property</span> <span class="hljs-string">Powered</span> <span class="hljs-string">on</span><br></code></pre></td></tr></table></figure><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">adapter</span> <span class="hljs-string">adapter</span> <span class="hljs-built_in">set-property</span> <span class="hljs-string">Powered</span> <span class="hljs-string">on</span><br></code></pre></td></tr></table></figure><h4 id="1-3-然后，要开始扫描网络（注意：这个命令不会输出任何内容），执行："><a href="#1-3-然后，要开始扫描网络（注意：这个命令不会输出任何内容），执行：" class="headerlink" title="1.3 然后，要开始扫描网络（注意：这个命令不会输出任何内容），执行："></a>1.3 然后，要开始扫描网络（注意：这个命令不会输出任何内容），执行：</h4><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs fortran">station <span class="hljs-keyword">name</span> <span class="hljs-built_in">scan</span><br></code></pre></td></tr></table></figure><h4 id="1-4-再然后，就可以列出所有可用的网络："><a href="#1-4-再然后，就可以列出所有可用的网络：" class="headerlink" title="1.4 再然后，就可以列出所有可用的网络："></a>1.4 再然后，就可以列出所有可用的网络：</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">station <span class="hljs-type">name</span> <span class="hljs-keyword">get</span>-networks<br></code></pre></td></tr></table></figure><h4 id="1-5-最后，要连接到一个网络："><a href="#1-5-最后，要连接到一个网络：" class="headerlink" title="1.5 最后，要连接到一个网络："></a>1.5 最后，要连接到一个网络：</h4><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">station name connect SSID（wifi名字）<br></code></pre></td></tr></table></figure><blockquote><p>输入WiFi密码回车</p><p>按exit退出iwctl</p></blockquote><h4 id="1-6-测试"><a href="#1-6-测试" class="headerlink" title="1.6 测试"></a>1.6 测试</h4><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-built_in">ping</span> archlinux<span class="hljs-meta">.org</span><br></code></pre></td></tr></table></figure><blockquote><p>[!WARNING]</p><h5 id="默认情况下，安装映像在启动时已经预先配置好并启用了systemd-networkd、systemd-resolved、iwd和ModemManager。但在已经安装完成了的系统之中并非如此"><a href="#默认情况下，安装映像在启动时已经预先配置好并启用了systemd-networkd、systemd-resolved、iwd和ModemManager。但在已经安装完成了的系统之中并非如此" class="headerlink" title="默认情况下，安装映像在启动时已经预先配置好并启用了systemd-networkd、systemd-resolved、iwd和ModemManager。但在已经安装完成了的系统之中并非如此"></a>默认情况下，安装映像在启动时已经预先配置好并启用了systemd-networkd、systemd-resolved、iwd和ModemManager。但在已经安装完成了的系统之中并非如此</h5></blockquote><h2 id="2-更新系统时间（可跳过）"><a href="#2-更新系统时间（可跳过）" class="headerlink" title="2.更新系统时间（可跳过）"></a>2.更新系统时间（可跳过）</h2><h4 id="在-Live-环境中systemd-timesyncd默认启用，也就是说当系统已经创建互联网连接后，系统时间将自动同步"><a href="#在-Live-环境中systemd-timesyncd默认启用，也就是说当系统已经创建互联网连接后，系统时间将自动同步" class="headerlink" title="在 Live 环境中systemd-timesyncd默认启用，也就是说当系统已经创建互联网连接后，系统时间将自动同步"></a>在 Live 环境中systemd-timesyncd默认启用，也就是说当系统已经创建互联网连接后，系统时间将自动同步</h4><h4 id="使用timedatectl确保系统时间是同步的"><a href="#使用timedatectl确保系统时间是同步的" class="headerlink" title="使用timedatectl确保系统时间是同步的"></a>使用timedatectl确保系统时间是同步的</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">timedatectl</span><br></code></pre></td></tr></table></figure><h2 id="3-创建硬盘分区"><a href="#3-创建硬盘分区" class="headerlink" title="3.创建硬盘分区"></a>3.创建硬盘分区</h2><h4 id="系统如果识别到计算机的内置硬盘、U盘或者移动硬盘等类型磁盘，就会将其分配为一个块设备，如-dev-sda、-dev-nvme0n1或-dev-mmcblk0。可以使用lsblk或者fdisk查看"><a href="#系统如果识别到计算机的内置硬盘、U盘或者移动硬盘等类型磁盘，就会将其分配为一个块设备，如-dev-sda、-dev-nvme0n1或-dev-mmcblk0。可以使用lsblk或者fdisk查看" class="headerlink" title="系统如果识别到计算机的内置硬盘、U盘或者移动硬盘等类型磁盘，就会将其分配为一个块设备，如&#x2F;dev&#x2F;sda、&#x2F;dev&#x2F;nvme0n1或&#x2F;dev&#x2F;mmcblk0。可以使用lsblk或者fdisk查看"></a>系统如果识别到计算机的内置硬盘、U盘或者移动硬盘等类型磁盘，就会将其分配为一个块设备，如&#x2F;dev&#x2F;sda、&#x2F;dev&#x2F;nvme0n1或&#x2F;dev&#x2F;mmcblk0。可以使用lsblk或者fdisk查看</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">fdisk</span> -l（此处为小写字母l）<br></code></pre></td></tr></table></figure><h4 id="结果中以rom、loop或者airootfs结尾的设备可以被忽略。结果中以rpbm、boot0或者boot1结尾的mmcblk-设备也可以被忽略"><a href="#结果中以rom、loop或者airootfs结尾的设备可以被忽略。结果中以rpbm、boot0或者boot1结尾的mmcblk-设备也可以被忽略" class="headerlink" title="结果中以rom、loop或者airootfs结尾的设备可以被忽略。结果中以rpbm、boot0或者boot1结尾的mmcblk*设备也可以被忽略"></a>结果中以rom、loop或者airootfs结尾的设备可以被忽略。结果中以rpbm、boot0或者boot1结尾的mmcblk*设备也可以被忽略</h4><h4 id="对于一个选定的设备，以下分区是必须要有的："><a href="#对于一个选定的设备，以下分区是必须要有的：" class="headerlink" title="对于一个选定的设备，以下分区是必须要有的："></a>对于一个选定的设备，以下分区是必须要有的：</h4><table><thead><tr><th>已安装系统上的挂载点</th><th>分区</th><th>分区类型</th><th>建议大小</th></tr></thead><tbody><tr><td>&#x2F;boot</td><td>&#x2F;dev&#x2F;efi_system_partition</td><td>EFI 系统分区</td><td>1 GiB</td></tr><tr><td>SWAP</td><td>&#x2F;dev&#x2F;swap_partition</td><td>Linux Swap （交换空间）</td><td>至少4GiB</td></tr><tr><td>&#x2F;</td><td>&#x2F;dev&#x2F;root_partition</td><td>Linux x86-64根目录 (&#x2F;)</td><td>设备剩余空间至少23-32GiB</td></tr></tbody></table><h1 id="4-格式化分区"><a href="#4-格式化分区" class="headerlink" title="4.格式化分区"></a>4.格式化分区</h1><h4 id="4-1-创建分区后，必须使用合适的文件系统对每个新创建的分区进行格式化"><a href="#4-1-创建分区后，必须使用合适的文件系统对每个新创建的分区进行格式化" class="headerlink" title="4.1 创建分区后，必须使用合适的文件系统对每个新创建的分区进行格式化"></a>4.1 创建分区后，必须使用合适的文件系统对每个新创建的分区进行格式化</h4><h4 id="要在根分区-dev-root-partition上创建一个Ext4文件系统，请运行"><a href="#要在根分区-dev-root-partition上创建一个Ext4文件系统，请运行" class="headerlink" title="要在根分区&#x2F;dev&#x2F;root_partition上创建一个Ext4文件系统，请运行"></a>要在根分区&#x2F;dev&#x2F;root_partition上创建一个Ext4文件系统，请运行</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkfs.ext4 <span class="hljs-regexp">/dev/</span>root_partition（根分区）<br></code></pre></td></tr></table></figure><h4 id="4-2-如果你要创建一个EFI-系统分区，使用mkfs-fat将其格式化为Fat32"><a href="#4-2-如果你要创建一个EFI-系统分区，使用mkfs-fat将其格式化为Fat32" class="headerlink" title="4.2 如果你要创建一个EFI 系统分区，使用mkfs.fat将其格式化为Fat32"></a>4.2 如果你要创建一个EFI 系统分区，使用mkfs.fat将其格式化为Fat32</h4><h4 id="警告：只有在分区步骤中创建EFI系统分区时才需要格式化。如果这个磁盘上已经有一个-EFI-系统分区了，将它重新格式化会破坏其他已安装操作系统的引导加载程序"><a href="#警告：只有在分区步骤中创建EFI系统分区时才需要格式化。如果这个磁盘上已经有一个-EFI-系统分区了，将它重新格式化会破坏其他已安装操作系统的引导加载程序" class="headerlink" title="警告：只有在分区步骤中创建EFI系统分区时才需要格式化。如果这个磁盘上已经有一个 EFI 系统分区了，将它重新格式化会破坏其他已安装操作系统的引导加载程序"></a>警告：只有在分区步骤中创建EFI系统分区时才需要格式化。如果这个磁盘上已经有一个 EFI 系统分区了，将它重新格式化会破坏其他已安装操作系统的引导加载程序</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">mkfs</span>.fat -F <span class="hljs-number">32</span> /dev/efi_system_partition（EFI 系统分区）<br></code></pre></td></tr></table></figure><h4 id="4-3-如果创建了交换分区，请使用mkswap将其初始化"><a href="#4-3-如果创建了交换分区，请使用mkswap将其初始化" class="headerlink" title="4.3 如果创建了交换分区，请使用mkswap将其初始化"></a>4.3 如果创建了交换分区，请使用mkswap将其初始化</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkswap <span class="hljs-regexp">/dev/</span>swap_partition（交换空间分区）<br></code></pre></td></tr></table></figure><h2 id="5-挂载分区4-格式化分区"><a href="#5-挂载分区4-格式化分区" class="headerlink" title="5.挂载分区4.格式化分区"></a>5.挂载分区4.格式化分区</h2><h4 id="5-1-将根磁盘卷挂载到-mnt"><a href="#5-1-将根磁盘卷挂载到-mnt" class="headerlink" title="5.1 将根磁盘卷挂载到&#x2F;mnt"></a>5.1 将根磁盘卷挂载到&#x2F;mnt</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mount /dev/root_partition（根分区） /mnt<br></code></pre></td></tr></table></figure><h4 id="5-2-然后使用mkdir在-mnt下创建任何剩余的挂载点（例如，为-boot而创建-mnt-boot），并按相应的层级顺序挂载相应的磁盘卷"><a href="#5-2-然后使用mkdir在-mnt下创建任何剩余的挂载点（例如，为-boot而创建-mnt-boot），并按相应的层级顺序挂载相应的磁盘卷" class="headerlink" title="5.2 然后使用mkdir在&#x2F;mnt下创建任何剩余的挂载点（例如，为&#x2F;boot而创建&#x2F;mnt&#x2F;boot），并按相应的层级顺序挂载相应的磁盘卷"></a>5.2 然后使用mkdir在&#x2F;mnt下创建任何剩余的挂载点（例如，为&#x2F;boot而创建&#x2F;mnt&#x2F;boot），并按相应的层级顺序挂载相应的磁盘卷</h4><h4 id="提示：使用–mkdir选项运行mount来创建指定的挂载点。或者，先使用mkdir创建挂载点再挂载"><a href="#提示：使用–mkdir选项运行mount来创建指定的挂载点。或者，先使用mkdir创建挂载点再挂载" class="headerlink" title="提示：使用–mkdir选项运行mount来创建指定的挂载点。或者，先使用mkdir创建挂载点再挂载"></a>提示：使用–mkdir选项运行mount来创建指定的挂载点。或者，先使用mkdir创建挂载点再挂载</h4><h4 id="注意：挂载分区一定要遵循顺序，先挂载根（root）分区（到-mnt），再挂载引导（boot）分区（到-mnt-boot或-mnt-efi，如果单独分出来了的话），最后再挂载其他分区。否则您可能遇到安装完成后无法启动系统的问题"><a href="#注意：挂载分区一定要遵循顺序，先挂载根（root）分区（到-mnt），再挂载引导（boot）分区（到-mnt-boot或-mnt-efi，如果单独分出来了的话），最后再挂载其他分区。否则您可能遇到安装完成后无法启动系统的问题" class="headerlink" title="注意：挂载分区一定要遵循顺序，先挂载根（root）分区（到&#x2F;mnt），再挂载引导（boot）分区（到&#x2F;mnt&#x2F;boot或&#x2F;mnt&#x2F;efi，如果单独分出来了的话），最后再挂载其他分区。否则您可能遇到安装完成后无法启动系统的问题"></a>注意：挂载分区一定要遵循顺序，先挂载根（root）分区（到&#x2F;mnt），再挂载引导（boot）分区（到&#x2F;mnt&#x2F;boot或&#x2F;mnt&#x2F;efi，如果单独分出来了的话），最后再挂载其他分区。否则您可能遇到安装完成后无法启动系统的问题</h4><h4 id="对于-UEFI-系统，挂载-EFI-系统分区"><a href="#对于-UEFI-系统，挂载-EFI-系统分区" class="headerlink" title="对于 UEFI 系统，挂载 EFI 系统分区"></a>对于 UEFI 系统，挂载 EFI 系统分区</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mount --<span class="hljs-built_in">mkdir</span> /dev/efi_system_partition /mnt/boot<br></code></pre></td></tr></table></figure><h4 id="5-3-如果创建了交换空间卷，请使用swapon启用它"><a href="#5-3-如果创建了交换空间卷，请使用swapon启用它" class="headerlink" title="5.3 如果创建了交换空间卷，请使用swapon启用它"></a>5.3 如果创建了交换空间卷，请使用swapon启用它</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">swapon <span class="hljs-regexp">/dev/</span>swap_partition（交换空间分区）<br></code></pre></td></tr></table></figure><h2 id="6-安装系统"><a href="#6-安装系统" class="headerlink" title="6.安装系统"></a>6.安装系统</h2><h4 id="6-1-选择镜像源-etc-pacman-d-mirrorlist中定义了软件包会从哪个镜像站下载，在-LiveCD-启动的系统上，且在连接到互联网后，reflector会通过选择-20-个最新同步的-HTTPS-镜像站并按下载速率对其进行排序来更新镜像列表"><a href="#6-1-选择镜像源-etc-pacman-d-mirrorlist中定义了软件包会从哪个镜像站下载，在-LiveCD-启动的系统上，且在连接到互联网后，reflector会通过选择-20-个最新同步的-HTTPS-镜像站并按下载速率对其进行排序来更新镜像列表" class="headerlink" title="6.1 选择镜像源&#x2F;etc&#x2F;pacman.d&#x2F;mirrorlist中定义了软件包会从哪个镜像站下载，在 LiveCD 启动的系统上，且在连接到互联网后，reflector会通过选择 20 个最新同步的 HTTPS 镜像站并按下载速率对其进行排序来更新镜像列表"></a>6.1 选择镜像源&#x2F;etc&#x2F;pacman.d&#x2F;mirrorlist中定义了软件包会从哪个镜像站下载，在 LiveCD 启动的系统上，且在连接到互联网后，reflector会通过选择 20 个最新同步的 HTTPS 镜像站并按下载速率对其进行排序来更新镜像列表</h4><h4 id="在列表中，越靠前的镜像站在下载软件包时，就会有越高的优先级。请您检查-etc-pacman-d-mirrorlist文件，看看列出的镜像站的顺序是否合适。如果不合适，可以手动编辑文件，将离您所处地理位置最近的镜像挪到文件的头部，同时也应该考虑一些其他的评判标准"><a href="#在列表中，越靠前的镜像站在下载软件包时，就会有越高的优先级。请您检查-etc-pacman-d-mirrorlist文件，看看列出的镜像站的顺序是否合适。如果不合适，可以手动编辑文件，将离您所处地理位置最近的镜像挪到文件的头部，同时也应该考虑一些其他的评判标准" class="headerlink" title="在列表中，越靠前的镜像站在下载软件包时，就会有越高的优先级。请您检查&#x2F;etc&#x2F;pacman.d&#x2F;mirrorlist文件，看看列出的镜像站的顺序是否合适。如果不合适，可以手动编辑文件，将离您所处地理位置最近的镜像挪到文件的头部，同时也应该考虑一些其他的评判标准"></a>在列表中，越靠前的镜像站在下载软件包时，就会有越高的优先级。请您检查&#x2F;etc&#x2F;pacman.d&#x2F;mirrorlist文件，看看列出的镜像站的顺序是否合适。如果不合适，可以手动编辑文件，将离您所处地理位置最近的镜像挪到文件的头部，同时也应该考虑一些其他的评判标准</h4><h4 id="如果-etc-pacman-d-mirrorlist文件中没有合适的镜像站，可以手动从archlinux-官方网站的镜像站列表下载一份。这需要您所在的网络能够正常访问-archlinux-官方网站。例如，使用curl下载位于中国大陆的-HTTPS-镜像站："><a href="#如果-etc-pacman-d-mirrorlist文件中没有合适的镜像站，可以手动从archlinux-官方网站的镜像站列表下载一份。这需要您所在的网络能够正常访问-archlinux-官方网站。例如，使用curl下载位于中国大陆的-HTTPS-镜像站：" class="headerlink" title="如果&#x2F;etc&#x2F;pacman.d&#x2F;mirrorlist文件中没有合适的镜像站，可以手动从archlinux 官方网站的镜像站列表下载一份。这需要您所在的网络能够正常访问 archlinux 官方网站。例如，使用curl下载位于中国大陆的 HTTPS 镜像站："></a>如果&#x2F;etc&#x2F;pacman.d&#x2F;mirrorlist文件中没有合适的镜像站，可以手动从archlinux 官方网站的镜像站列表下载一份。这需要您所在的网络能够正常访问 archlinux 官方网站。例如，使用curl下载位于中国大陆的 HTTPS 镜像站：</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl -L <span class="hljs-string">&#x27;https://archlinux.org/mirrorlist/?country=CN&amp;protocol=https&#x27;</span> -o <span class="hljs-regexp">/etc/</span>pacman.d/mirrorlist<br></code></pre></td></tr></table></figure><h4 id="或者，也可以通过安装pacman-mirrorlis包来获取按国家分列的原始镜像列表。这么做的缺点是pacman仍然会使用当前配置中的镜像站来下载软件包数据库和pacman-mirrorlis包，这可能会很慢。在挑选了能用的镜像之后，可以执行"><a href="#或者，也可以通过安装pacman-mirrorlis包来获取按国家分列的原始镜像列表。这么做的缺点是pacman仍然会使用当前配置中的镜像站来下载软件包数据库和pacman-mirrorlis包，这可能会很慢。在挑选了能用的镜像之后，可以执行" class="headerlink" title="或者，也可以通过安装pacman-mirrorlis包来获取按国家分列的原始镜像列表。这么做的缺点是pacman仍然会使用当前配置中的镜像站来下载软件包数据库和pacman-mirrorlis包，这可能会很慢。在挑选了能用的镜像之后，可以执行"></a>或者，也可以通过安装pacman-mirrorlis包来获取按国家分列的原始镜像列表。这么做的缺点是pacman仍然会使用当前配置中的镜像站来下载软件包数据库和pacman-mirrorlis包，这可能会很慢。在挑选了能用的镜像之后，可以执行</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">pacman -Sy</span><br></code></pre></td></tr></table></figure><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">pacman -Sy pacman-mirrorlist</span><br></code></pre></td></tr></table></figure><h4 id="再将-etc-pacman-d-mirrorlist-pacnew复制到-etc-pacman-d-mirrorlist并进行编辑或者，如果您记得想要使用的镜像站的URL可以手动编辑-etc-pacman-d-mirrorlist文件并手动输-入-URL"><a href="#再将-etc-pacman-d-mirrorlist-pacnew复制到-etc-pacman-d-mirrorlist并进行编辑或者，如果您记得想要使用的镜像站的URL可以手动编辑-etc-pacman-d-mirrorlist文件并手动输-入-URL" class="headerlink" title="再将&#x2F;etc&#x2F;pacman.d&#x2F;mirrorlist.pacnew复制到&#x2F;etc&#x2F;pacman.d&#x2F;mirrorlist并进行编辑或者，如果您记得想要使用的镜像站的URL可以手动编辑&#x2F;etc&#x2F;pacman.d&#x2F;mirrorlist文件并手动输  入 URL"></a>再将&#x2F;etc&#x2F;pacman.d&#x2F;mirrorlist.pacnew复制到&#x2F;etc&#x2F;pacman.d&#x2F;mirrorlist并进行编辑或者，如果您记得想要使用的镜像站的URL可以手动编辑&#x2F;etc&#x2F;pacman.d&#x2F;mirrorlist文件并手动输  入 URL</h4><h4 id="6-2-使用pacstrap脚本，安装base包软件包和Linux内核以及常规硬件的固件"><a href="#6-2-使用pacstrap脚本，安装base包软件包和Linux内核以及常规硬件的固件" class="headerlink" title="6.2 使用pacstrap脚本，安装base包软件包和Linux内核以及常规硬件的固件"></a>6.2 使用pacstrap脚本，安装base包软件包和Linux内核以及常规硬件的固件</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">pacstrap -K /mnt <span class="hljs-keyword">base</span> linux linux-firmware <span class="hljs-keyword">base</span>-devel networkmanager openssh dhcpcd vim net-tools<br></code></pre></td></tr></table></figure><h4 id="这时候可以同时额外安装计算机的-CPU-微码包，使用intel-ucode和amd-ucode包。也可以暂时都不安装，等到进入系统后再安装"><a href="#这时候可以同时额外安装计算机的-CPU-微码包，使用intel-ucode和amd-ucode包。也可以暂时都不安装，等到进入系统后再安装" class="headerlink" title="这时候可以同时额外安装计算机的 CPU 微码包，使用intel-ucode和amd-ucode包。也可以暂时都不安装，等到进入系统后再安装"></a>这时候可以同时额外安装计算机的 CPU 微码包，使用intel-ucode和amd-ucode包。也可以暂时都不安装，等到进入系统后再安装</h4><h4 id="新安装的系统中是没有文本编辑器的，所以请您先安装文本编辑器如nano或者vim"><a href="#新安装的系统中是没有文本编辑器的，所以请您先安装文本编辑器如nano或者vim" class="headerlink" title="新安装的系统中是没有文本编辑器的，所以请您先安装文本编辑器如nano或者vim"></a>新安装的系统中是没有文本编辑器的，所以请您先安装文本编辑器如nano或者vim</h4><h2 id="7-生成fstab文件"><a href="#7-生成fstab文件" class="headerlink" title="7.生成fstab文件"></a>7.生成fstab文件</h2><h4 id="7-1-通过以下命令生成fstab文件（用-U或-L选项设置UUID或卷标）"><a href="#7-1-通过以下命令生成fstab文件（用-U或-L选项设置UUID或卷标）" class="headerlink" title="7.1 通过以下命令生成fstab文件（用-U或-L选项设置UUID或卷标）"></a>7.1 通过以下命令生成fstab文件（用-U或-L选项设置UUID或卷标）</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">genfstab -U <span class="hljs-regexp">/mnt &gt; /m</span>nt<span class="hljs-regexp">/etc/</span>fstab<br></code></pre></td></tr></table></figure><h4 id="7-2-强烈建议在执行完以上命令后，检查一下生成的-mnt-etc-fstab文件是否正确"><a href="#7-2-强烈建议在执行完以上命令后，检查一下生成的-mnt-etc-fstab文件是否正确" class="headerlink" title="7.2 强烈建议在执行完以上命令后，检查一下生成的&#x2F;mnt&#x2F;etc&#x2F;fstab文件是否正确"></a>7.2 强烈建议在执行完以上命令后，检查一下生成的&#x2F;mnt&#x2F;etc&#x2F;fstab文件是否正确</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /mnt/etc/fstab<br></code></pre></td></tr></table></figure><h2 id="8-配置新安装的系统"><a href="#8-配置新安装的系统" class="headerlink" title="8.配置新安装的系统"></a>8.配置新安装的系统</h2><h4 id="8-1-通过以下命令chroot到新安装的系统"><a href="#8-1-通过以下命令chroot到新安装的系统" class="headerlink" title="8.1 通过以下命令chroot到新安装的系统"></a>8.1 通过以下命令chroot到新安装的系统</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">arch-chroot /mnt<br></code></pre></td></tr></table></figure><h4 id="8-2-设置时区："><a href="#8-2-设置时区：" class="headerlink" title="8.2 设置时区："></a>8.2 设置时区：</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">ln -sf <span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/zoneinfo/</span>Asia<span class="hljs-regexp">/Shanghai /</span>etc/localtime<br></code></pre></td></tr></table></figure><h4 id="8-3-运行hwclock以生成-etc-adjtime"><a href="#8-3-运行hwclock以生成-etc-adjtime" class="headerlink" title="8.3 运行hwclock以生成&#x2F;etc&#x2F;adjtime"></a>8.3 运行hwclock以生成&#x2F;etc&#x2F;adjtime</h4><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">hwclock <span class="hljs-comment">--systohc</span><br></code></pre></td></tr></table></figure><h4 id="8-4-区域和本地化设置"><a href="#8-4-区域和本地化设置" class="headerlink" title="8.4 区域和本地化设置"></a>8.4 区域和本地化设置</h4><h4 id="程序和库如果需要本地化文本，都依赖区域设置，后者明确规定了地域、货币、时区日期的格式、字符排列方式和其他本地化标准"><a href="#程序和库如果需要本地化文本，都依赖区域设置，后者明确规定了地域、货币、时区日期的格式、字符排列方式和其他本地化标准" class="headerlink" title="程序和库如果需要本地化文本，都依赖区域设置，后者明确规定了地域、货币、时区日期的格式、字符排列方式和其他本地化标准"></a>程序和库如果需要本地化文本，都依赖区域设置，后者明确规定了地域、货币、时区日期的格式、字符排列方式和其他本地化标准</h4><h4 id="需要设置这两个文件locale-gen与locale-conf"><a href="#需要设置这两个文件locale-gen与locale-conf" class="headerlink" title="需要设置这两个文件locale.gen与locale.conf"></a>需要设置这两个文件locale.gen与locale.conf</h4><h4 id="编辑-etc-locale-gen取消掉en-US-UTF-8-UTF-8和其他需要的-UTF-8区域设置前的注释"><a href="#编辑-etc-locale-gen取消掉en-US-UTF-8-UTF-8和其他需要的-UTF-8区域设置前的注释" class="headerlink" title="编辑&#x2F;etc&#x2F;locale.gen取消掉en_US.UTF-8 UTF-8和其他需要的 UTF-8区域设置前的注释#"></a>编辑&#x2F;etc&#x2F;locale.gen取消掉en_US.UTF-8 UTF-8和其他需要的 UTF-8区域设置前的注释#</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/</span>locale.gen<br></code></pre></td></tr></table></figure><h4 id="8-5-接着执行locale-gen以生成locale信息"><a href="#8-5-接着执行locale-gen以生成locale信息" class="headerlink" title="8.5 接着执行locale-gen以生成locale信息"></a>8.5 接着执行locale-gen以生成locale信息</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">locale-gen</span><br></code></pre></td></tr></table></figure><h4 id="8-6-然后创建locale-conf文件并编辑设定LANG变量"><a href="#8-6-然后创建locale-conf文件并编辑设定LANG变量" class="headerlink" title="8.6 然后创建locale.conf文件并编辑设定LANG变量"></a>8.6 然后创建locale.conf文件并编辑设定LANG变量</h4><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf">/etc/locale.conf<br><span class="hljs-attribute">LANG</span><span class="hljs-operator">=</span>en_US.UTF-<span class="hljs-number">8</span><br></code></pre></td></tr></table></figure><h4 id="8-7-设置主机名（zjh-archnotebook）"><a href="#8-7-设置主机名（zjh-archnotebook）" class="headerlink" title="8.7 设置主机名（zjh@archnotebook）"></a>8.7 设置主机名（zjh@archnotebook）</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vim</span> /etc/<span class="hljs-built_in">hostname</span><br></code></pre></td></tr></table></figure><h4 id="8-8-设置网络（可跳过）"><a href="#8-8-设置网络（可跳过）" class="headerlink" title="8.8 设置网络（可跳过）"></a>8.8 设置网络（可跳过）</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/</span>hosts<br></code></pre></td></tr></table></figure><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-number">127.0.0.1</span>localhost<br>::<span class="hljs-number">1</span>localhost<br><span class="hljs-number">127.0.1.1</span>主机名.localdomain主机名<br></code></pre></td></tr></table></figure><h4 id="8-9-设置root密码"><a href="#8-9-设置root密码" class="headerlink" title="8.9 设置root密码"></a>8.9 设置root密码</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">passwd root</span><br></code></pre></td></tr></table></figure><h2 id="9-安装GRUB引导程序"><a href="#9-安装GRUB引导程序" class="headerlink" title="9.安装GRUB引导程序"></a>9.安装GRUB引导程序</h2><h4 id="9-1-首先安装软件包grub和efibootmgr其中GRUB是启动引导器，efibootmgr被GRUB脚本用来将启动项写入NVRAM，想要让grub-mkconfig探测其他已经安装的系统引导并自动把他们添加到启动菜单中，必须安装os-prober包，要挂在ntfs分区必须用到ntfs-3g包"><a href="#9-1-首先安装软件包grub和efibootmgr其中GRUB是启动引导器，efibootmgr被GRUB脚本用来将启动项写入NVRAM，想要让grub-mkconfig探测其他已经安装的系统引导并自动把他们添加到启动菜单中，必须安装os-prober包，要挂在ntfs分区必须用到ntfs-3g包" class="headerlink" title="9.1 首先安装软件包grub和efibootmgr其中GRUB是启动引导器，efibootmgr被GRUB脚本用来将启动项写入NVRAM，想要让grub-mkconfig探测其他已经安装的系统引导并自动把他们添加到启动菜单中，必须安装os-prober包，要挂在ntfs分区必须用到ntfs-3g包"></a>9.1 首先安装软件包grub和efibootmgr其中GRUB是启动引导器，efibootmgr被GRUB脚本用来将启动项写入NVRAM，想要让grub-mkconfig探测其他已经安装的系统引导并自动把他们添加到启动菜单中，必须安装os-prober包，要挂在ntfs分区必须用到ntfs-3g包</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">pacman</span> -S grub efibootmgr os-prober ntfs-<span class="hljs-number">3</span>g<br></code></pre></td></tr></table></figure><h4 id="9-2-注意–efi-directory和–bootloader-id是GRUB-UEFI特有的–efi-directory替代了已经废弃的–root-directory您可能注意到在grub-install命令中没有device-path-选项（例如-dev-sda）事实上即使提供了device-path，也会被GRUB-UEFI安装脚本忽略，因为-UEFI-启动加载器不使用MBR启动代码或启动扇区"><a href="#9-2-注意–efi-directory和–bootloader-id是GRUB-UEFI特有的–efi-directory替代了已经废弃的–root-directory您可能注意到在grub-install命令中没有device-path-选项（例如-dev-sda）事实上即使提供了device-path，也会被GRUB-UEFI安装脚本忽略，因为-UEFI-启动加载器不使用MBR启动代码或启动扇区" class="headerlink" title="9.2 注意–efi-directory和–bootloader-id是GRUB UEFI特有的–efi-directory替代了已经废弃的–root-directory您可能注意到在grub-install命令中没有device_path 选项（例如 &#x2F;dev&#x2F;sda）事实上即使提供了device_path，也会被GRUB UEFI安装脚本忽略，因为 UEFI 启动加载器不使用MBR启动代码或启动扇区"></a>9.2 注意–efi-directory和–bootloader-id是GRUB UEFI特有的–efi-directory替代了已经废弃的–root-directory您可能注意到在grub-install命令中没有device_path 选项（例如 &#x2F;dev&#x2F;sda）事实上即使提供了device_path，也会被GRUB UEFI安装脚本忽略，因为 UEFI 启动加载器不使用MBR启动代码或启动扇区</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">grub-install <span class="hljs-attribute">--target</span>=x86_64-efi <span class="hljs-attribute">--efi-directory</span>=esp <span class="hljs-attribute">--bootloader-id</span>=GRUB<br></code></pre></td></tr></table></figure><h4 id="9-3-如果你使用了–removable选项，那GRUB-将被安装到esp-EFI-BOOT-BOOTX64-EFI（当使用i386-efi时是esp-EFI-BOOT-BOOTIA32-EFI-），此时即使-EFI-变量被重设或者你把这个驱动器接到其他电脑上，你仍可从这个驱动器上启动。通常来说，你只要像操作BIOS-设备一样在启动时选择这个驱动器就可以了。如果设备是同时安装了Windows的多引导启动，注意-Windows-通常会在这里安装一个-EFI-可执行程序，该程序的目的是仅重建Windows的UEFI启动项。如果你想在Mac上安装GRUB，那你必须要使用该选项。某些台式机主板只会在此位置寻找-EFI-可执行文件，因此该选项是必需的，尤其是微星（MSI）主板。-如果你更新了UEFI，启动项可能会在更新后丢失。因此可以创建一个removable启动项作为后备"><a href="#9-3-如果你使用了–removable选项，那GRUB-将被安装到esp-EFI-BOOT-BOOTX64-EFI（当使用i386-efi时是esp-EFI-BOOT-BOOTIA32-EFI-），此时即使-EFI-变量被重设或者你把这个驱动器接到其他电脑上，你仍可从这个驱动器上启动。通常来说，你只要像操作BIOS-设备一样在启动时选择这个驱动器就可以了。如果设备是同时安装了Windows的多引导启动，注意-Windows-通常会在这里安装一个-EFI-可执行程序，该程序的目的是仅重建Windows的UEFI启动项。如果你想在Mac上安装GRUB，那你必须要使用该选项。某些台式机主板只会在此位置寻找-EFI-可执行文件，因此该选项是必需的，尤其是微星（MSI）主板。-如果你更新了UEFI，启动项可能会在更新后丢失。因此可以创建一个removable启动项作为后备" class="headerlink" title="9.3 如果你使用了–removable选项，那GRUB 将被安装到esp&#x2F;EFI&#x2F;BOOT&#x2F;BOOTX64.EFI（当使用i386-efi时是esp&#x2F;EFI&#x2F;BOOT&#x2F;BOOTIA32.EFI ），此时即使 EFI 变量被重设或者你把这个驱动器接到其他电脑上，你仍可从这个驱动器上启动。通常来说，你只要像操作BIOS 设备一样在启动时选择这个驱动器就可以了。如果设备是同时安装了Windows的多引导启动，注意 Windows 通常会在这里安装一个 EFI 可执行程序，该程序的目的是仅重建Windows的UEFI启动项。如果你想在Mac上安装GRUB，那你必须要使用该选项。某些台式机主板只会在此位置寻找 EFI 可执行文件，因此该选项是必需的，尤其是微星（MSI）主板。 如果你更新了UEFI，启动项可能会在更新后丢失。因此可以创建一个removable启动项作为后备"></a>9.3 如果你使用了–removable选项，那GRUB 将被安装到esp&#x2F;EFI&#x2F;BOOT&#x2F;BOOTX64.EFI（当使用i386-efi时是esp&#x2F;EFI&#x2F;BOOT&#x2F;BOOTIA32.EFI ），此时即使 EFI 变量被重设或者你把这个驱动器接到其他电脑上，你仍可从这个驱动器上启动。通常来说，你只要像操作BIOS 设备一样在启动时选择这个驱动器就可以了。如果设备是同时安装了Windows的多引导启动，注意 Windows 通常会在这里安装一个 EFI 可执行程序，该程序的目的是仅重建Windows的UEFI启动项。如果你想在Mac上安装GRUB，那你必须要使用该选项。某些台式机主板只会在此位置寻找 EFI 可执行文件，因此该选项是必需的，尤其是微星（MSI）主板。 如果你更新了UEFI，启动项可能会在更新后丢失。因此可以创建一个removable启动项作为后备</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">grub-install <span class="hljs-attribute">--target</span>=x86_64-efi <span class="hljs-attribute">--efi-directory</span>=esp --removable<br></code></pre></td></tr></table></figure><h4 id="9-4-生成主配置文件"><a href="#9-4-生成主配置文件" class="headerlink" title="9.4 生成主配置文件"></a>9.4 生成主配置文件</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">grub-mkconfig -o <span class="hljs-regexp">/boot/g</span>rub/grub.cfg<br></code></pre></td></tr></table></figure><h4 id="9-5-退出arch-chroot"><a href="#9-5-退出arch-chroot" class="headerlink" title="9.5 退出arch-chroot"></a>9.5 退出arch-chroot</h4><h4 id="输入exit或按Ctrl-d退出-chroot-环境"><a href="#输入exit或按Ctrl-d退出-chroot-环境" class="headerlink" title="输入exit或按Ctrl+d退出 chroot 环境"></a>输入exit或按Ctrl+d退出 chroot 环境</h4><h4 id="可选用umount-R-mnt手动卸载被挂载的分区：这有助于发现任何“繁忙”的分区"><a href="#可选用umount-R-mnt手动卸载被挂载的分区：这有助于发现任何“繁忙”的分区" class="headerlink" title="可选用umount -R &#x2F;mnt手动卸载被挂载的分区：这有助于发现任何“繁忙”的分区"></a>可选用umount -R &#x2F;mnt手动卸载被挂载的分区：这有助于发现任何“繁忙”的分区</h4><h4 id="最后，通过执行reboot重启系统，systemd将自动卸载仍然挂载的任何分区。这时候不要忘记移除安装介质，然后使用root账户登录到新系统"><a href="#最后，通过执行reboot重启系统，systemd将自动卸载仍然挂载的任何分区。这时候不要忘记移除安装介质，然后使用root账户登录到新系统" class="headerlink" title="最后，通过执行reboot重启系统，systemd将自动卸载仍然挂载的任何分区。这时候不要忘记移除安装介质，然后使用root账户登录到新系统"></a>最后，通过执行reboot重启系统，systemd将自动卸载仍然挂载的任何分区。这时候不要忘记移除安装介质，然后使用root账户登录到新系统</h4><h4 id="重启之后以root用户登录"><a href="#重启之后以root用户登录" class="headerlink" title="重启之后以root用户登录"></a>重启之后以root用户登录</h4><h2 id="10-开启网络创建用户"><a href="#10-开启网络创建用户" class="headerlink" title="10.开启网络创建用户"></a>10.开启网络创建用户</h2><h4 id="10-1-开启NetworkManager服务"><a href="#10-1-开启NetworkManager服务" class="headerlink" title="10.1 开启NetworkManager服务"></a>10.1 开启NetworkManager服务</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">systemctl <span class="hljs-keyword">enable</span> <span class="hljs-comment">--now NetworkManager</span><br></code></pre></td></tr></table></figure><h4 id="10-2-使用NetworkManager附带nmcli连接网络"><a href="#10-2-使用NetworkManager附带nmcli连接网络" class="headerlink" title="10.2 使用NetworkManager附带nmcli连接网络"></a>10.2 使用NetworkManager附带nmcli连接网络</h4><ul><li>显示附近的Wi-Fi网络</li><li>nmcli device wifi list</li><li>连接到Wi-Fi网络</li><li>nmcli device wifi connect SSID_或_BSSID password 密码</li><li>连接到隐藏的Wi-Fi网络</li><li>nmcli device wifi connect SSID_或_BSSID password 密码 hidden yes</li><li>连接到wlan1网络接口上的 Wi-Fi</li><li>nmcli device wifi connect SSID_或_BSSID </li><li>password 密码 ifname wlan1 profile_name</li><li>断开网络接口上的连接：</li><li>nmcli device disconnect ifname eth0</li><li>显示连接列表及其名称、UUID、类型和支持设备</li><li>nmcli connection show</li><li>激活连接（即使用现有配置文件连接到网络）</li><li>nmcli connection up name_或_uuid</li><li>删除连接</li><li>nmcli connection delete name_或_uuid</li><li>显示所有网络设备及其状态</li><li>nmcli device</li><li>关闭 Wi-Fi</li><li>nmcli radio wifi off</li></ul><h4 id="10-3-创建普通用户"><a href="#10-3-创建普通用户" class="headerlink" title="10.3 创建普通用户"></a>10.3 创建普通用户</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">useradd -m -<span class="hljs-selector-tag">G</span> wheel zjh<br></code></pre></td></tr></table></figure><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">passwd zjh</span><br></code></pre></td></tr></table></figure><h4 id="10-4-将新用户加入sudoers中"><a href="#10-4-将新用户加入sudoers中" class="headerlink" title="10.4 将新用户加入sudoers中"></a>10.4 将新用户加入sudoers中</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/</span>sudoers <br></code></pre></td></tr></table></figure><p><strong>取消 %wheel ALL&#x3D;(ALL:ALL)  ALL的注释</strong></p><h2 id="11-安装桌面环境"><a href="#11-安装桌面环境" class="headerlink" title="11.安装桌面环境"></a>11.安装桌面环境</h2><p><del>pacman -S plasma kde-applications sddm</del></p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">pacman -S plasma-<span class="hljs-keyword">meta</span> sddm bash-completion<br></code></pre></td></tr></table></figure><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">pacman -S nvidia nvidia-settings nvidia-utils</span><br></code></pre></td></tr></table></figure><blockquote><p>[!NOTE]</p><p>需要x11环境安装<strong>xorg plasma-x11-session（不需要则跳过）</strong></p><p>从 Plasma 6.4 开始，X11会话只能通plasma-x11-session包软件包单独提供</p><ul><li>要从控制台启动Plasma on Wayland会话，请运行&#x2F;usr&#x2F;lib&#x2F;plasma-dbus-run-session-if-needed &#x2F;usr&#x2F;bin&#x2F;startplasma-wayland。</li><li>若要使用”xinit&#x2F;startx”启动 Plasma 桌面，请在 .xinitrc 文件中添加 export DESKTOP_SESSION&#x3D;plasma 和 exec startplasma-x11，或者直接在控制台运行startx &#x2F;usr&#x2F;bin&#x2F;startplasma-x11，若要在登录时开启 Xorg，见登录时启动 X</li></ul></blockquote><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">pacman</span> -S xorg plasma-<span class="hljs-built_in">x11</span>-session<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">systemctl <span class="hljs-built_in">enable</span> sddm<br></code></pre></td></tr></table></figure><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">reboot</span><br></code></pre></td></tr></table></figure><blockquote><p>[!IMPORTANT]</p><p><strong>需要安装依赖</strong></p></blockquote><p><strong>这个是appimage程序的依赖</strong></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">sudo pacman -S appmenu-gtk-<span class="hljs-keyword">module</span><br></code></pre></td></tr></table></figure><p><strong>这个是qv2ray的依赖</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S libxcrypt-compat<br></code></pre></td></tr></table></figure><p><strong>这个是火狐firefox的依赖</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S dbus-glib<br><span class="hljs-built_in">sudo</span> pacman -S speech-dispatcher<br></code></pre></td></tr></table></figure><p><strong>这个是网络下载工具</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S wget<br></code></pre></td></tr></table></figure><p><strong>修复使用windows11字体</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S noto-fonts-cjk wqy-microhei wqy-zenhei ttf-liberation<br></code></pre></td></tr></table></figure><p><strong>sddm主题依赖Qt图形效果QML模块</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S qt5-graphicaleffects qt5-quickcontrols qt5-quickcontrols2<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S qt5-svg qt5-multimedia<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S qt6-declarative qt6-multimedia<br></code></pre></td></tr></table></figure><blockquote><p>[!NOTE]</p><p>qt6-virtualkeyboard 虚拟键盘（默认已经安装）</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S qt6-virtualkeyboard <br></code></pre></td></tr></table></figure><p><strong>hexo所需的依赖</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S nodejs npm<br></code></pre></td></tr></table></figure><p><strong>磁盘管理工具</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S partitionmanager<br></code></pre></td></tr></table></figure><h2 id="12-源列表-32位源"><a href="#12-源列表-32位源" class="headerlink" title="12.源列表+32位源"></a>12.源列表+32位源</h2><h5 id="Mirrorlist的China源"><a href="#Mirrorlist的China源" class="headerlink" title="Mirrorlist的China源"></a>Mirrorlist的China源</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">## China</span><br>Server = https:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/archlinux/</span><span class="hljs-variable">$repo</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$arch</span><br>Server = https:<span class="hljs-regexp">//mi</span>rrors.bfsu.edu.cn<span class="hljs-regexp">/archlinux/</span><span class="hljs-variable">$repo</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$arch</span><br>Server = https:<span class="hljs-regexp">//mi</span>rrors.cqu.edu.cn<span class="hljs-regexp">/archlinux/</span><span class="hljs-variable">$repo</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$arch</span><br>Server = https:<span class="hljs-regexp">//mi</span>rrors.hit.edu.cn<span class="hljs-regexp">/archlinux/</span><span class="hljs-variable">$repo</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$arch</span><br>Server = https:<span class="hljs-regexp">//mi</span>rrors.hust.edu.cn<span class="hljs-regexp">/archlinux/</span><span class="hljs-variable">$repo</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$arch</span><br>Server = https:<span class="hljs-regexp">//mi</span>rrors.jcut.edu.cn<span class="hljs-regexp">/archlinux/</span><span class="hljs-variable">$repo</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$arch</span><br>Server = https:<span class="hljs-regexp">//mi</span>rrors.jlu.edu.cn<span class="hljs-regexp">/archlinux/</span><span class="hljs-variable">$repo</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$arch</span><br>Server = https:<span class="hljs-regexp">//mi</span>rrors.jxust.edu.cn<span class="hljs-regexp">/archlinux/</span><span class="hljs-variable">$repo</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$arch</span><br>Server = https:<span class="hljs-regexp">//mi</span>rrors.neusoft.edu.cn<span class="hljs-regexp">/archlinux/</span><span class="hljs-variable">$repo</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$arch</span><br>Server = https:<span class="hljs-regexp">//mi</span>rrors.nju.edu.cn<span class="hljs-regexp">/archlinux/</span><span class="hljs-variable">$repo</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$arch</span><br>Server = https:<span class="hljs-regexp">//mi</span>rror.nyist.edu.cn<span class="hljs-regexp">/archlinux/</span><span class="hljs-variable">$repo</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$arch</span><br>Server = https:<span class="hljs-regexp">//mi</span>rrors.qlu.edu.cn<span class="hljs-regexp">/archlinux/</span><span class="hljs-variable">$repo</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$arch</span><br>Server = https:<span class="hljs-regexp">//mi</span>rrors.shanghaitech.edu.cn<span class="hljs-regexp">/archlinux/</span><span class="hljs-variable">$repo</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$arch</span><br>Server = https:<span class="hljs-regexp">//mi</span>rrors.sjtug.sjtu.edu.cn<span class="hljs-regexp">/archlinux/</span><span class="hljs-variable">$repo</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$arch</span><br>Server = https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/archlinux/</span><span class="hljs-variable">$repo</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$arch</span><br>Server = https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/archlinux/</span><span class="hljs-variable">$repo</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$arch</span><br>Server = https:<span class="hljs-regexp">//mi</span>rrors.wsyu.edu.cn<span class="hljs-regexp">/archlinux/</span><span class="hljs-variable">$repo</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$arch</span><br>Server = https:<span class="hljs-regexp">//mi</span>rrors.xjtu.edu.cn<span class="hljs-regexp">/archlinux/</span><span class="hljs-variable">$repo</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$arch</span><br></code></pre></td></tr></table></figure><h4 id="12-1-开启pacman-conf中的32位源"><a href="#12-1-开启pacman-conf中的32位源" class="headerlink" title="12.1 开启pacman.conf中的32位源"></a>12.1 开启pacman.conf中的32位源</h4><blockquote><h5 id="去除以下注释"><a href="#去除以下注释" class="headerlink" title="去除以下注释"></a>去除以下注释</h5></blockquote><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[multilib]</span><br><span class="hljs-attr">Include</span> = /etc/pacman.d/mirrorlist<br></code></pre></td></tr></table></figure><blockquote><h5 id="加入以下源"><a href="#加入以下源" class="headerlink" title="加入以下源"></a>加入以下源</h5></blockquote><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[archlinuxcn]</span><br><span class="hljs-attr">Server</span> = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/<span class="hljs-variable">$arch</span><br></code></pre></td></tr></table></figure><h4 id="12-2-安装archlinuxcn-keyring包前的额外步骤（可跳过，目前2025年测试无报错）"><a href="#12-2-安装archlinuxcn-keyring包前的额外步骤（可跳过，目前2025年测试无报错）" class="headerlink" title="12.2 安装archlinuxcn-keyring包前的额外步骤（可跳过，目前2025年测试无报错）"></a>12.2 安装archlinuxcn-keyring包前的额外步骤（可跳过，目前2025年测试无报错）</h4><blockquote><p>在2023年后，安装archlinuxcn-keyring时可能会出现错误，以下提示</p></blockquote><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs subunit"><span class="hljs-keyword">error: </span>archlinuxcn-keyring: Signature from&quot;Jiachen YANG(Arch Linux Packager Signing Key)” is marginal trust<br></code></pre></td></tr></table></figure><blockquote><p>需要在本地信任farseerfc的GPG key</p></blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lsl">sudo pacman-<span class="hljs-type">key</span> --lsign-<span class="hljs-type">key</span> <span class="hljs-string">&quot;farseerfc@archlinux.org&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S archlinuxcn-keyring<br></code></pre></td></tr></table></figure><blockquote><p>安装yay</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S yay<br></code></pre></td></tr></table></figure><h2 id="13-安装显卡驱动"><a href="#13-安装显卡驱动" class="headerlink" title="13.安装显卡驱动"></a>13.安装显卡驱动</h2><h4 id="13-1-intel核显驱动（cpu不带F的需要安装）"><a href="#13-1-intel核显驱动（cpu不带F的需要安装）" class="headerlink" title="13.1 intel核显驱动（cpu不带F的需要安装）"></a>13.1 intel核显驱动（cpu不带F的需要安装）</h4><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">sudo pacman -S mesa lib32-mesa vulkan-<span class="hljs-built_in">int</span>el lib32-vulkan-<span class="hljs-built_in">int</span>el<br></code></pre></td></tr></table></figure><h4 id="13-2-nvidia显卡驱动（在上面已经安装一部分显卡驱动了）"><a href="#13-2-nvidia显卡驱动（在上面已经安装一部分显卡驱动了）" class="headerlink" title="13.2 nvidia显卡驱动（在上面已经安装一部分显卡驱动了）"></a>13.2 nvidia显卡驱动（在上面已经安装一部分显卡驱动了）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S lib32-nvidia-util<br></code></pre></td></tr></table></figure><h4 id="13-3-显卡双切方案（一）"><a href="#13-3-显卡双切方案（一）" class="headerlink" title="13.3 显卡双切方案（一）"></a>13.3 显卡双切方案（一）</h4><h4 id="安装optimus-manager以及其图形前端optimus-manager-qt通过该程序可以在集成显卡和独立显卡间轻松切换，optimus-manager提供三种模式，分别为仅用独显、仅用集显以及hybrid动态切换模式"><a href="#安装optimus-manager以及其图形前端optimus-manager-qt通过该程序可以在集成显卡和独立显卡间轻松切换，optimus-manager提供三种模式，分别为仅用独显、仅用集显以及hybrid动态切换模式" class="headerlink" title="安装optimus-manager以及其图形前端optimus-manager-qt通过该程序可以在集成显卡和独立显卡间轻松切换，optimus-manager提供三种模式，分别为仅用独显、仅用集显以及hybrid动态切换模式"></a>安装optimus-manager以及其图形前端optimus-manager-qt通过该程序可以在集成显卡和独立显卡间轻松切换，optimus-manager提供三种模式，分别为仅用独显、仅用集显以及hybrid动态切换模式</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">yay -S optimus-manager optimus-manager-qt</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">enable</span> optimus-manager.service<br></code></pre></td></tr></table></figure><h4 id="重启即可使用"><a href="#重启即可使用" class="headerlink" title="重启即可使用"></a>重启即可使用</h4><h4 id="13-4-显卡双切方案（二）"><a href="#13-4-显卡双切方案（二）" class="headerlink" title="13.4 显卡双切方案（二）"></a>13.4 显卡双切方案（二）</h4><blockquote><p>安装envycontrol</p></blockquote><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">yay -S envycontrol</span><br></code></pre></td></tr></table></figure><blockquote><p>动态模式</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> envycontrol -s hybrid<br></code></pre></td></tr></table></figure><blockquote><p>nvidia独立显卡模式</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> envycontrol -s nvidia<br></code></pre></td></tr></table></figure><blockquote><p>integrated核显模式</p></blockquote><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">sudo envycontrol -s <span class="hljs-built_in">int</span>egrated<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Arch Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
